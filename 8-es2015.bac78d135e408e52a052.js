(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{SR9h:function(e,t,n){"use strict";n.r(t),n.d(t,"PythonModule",(function(){return l}));var b=n("ofXK"),i=n("OtPg"),a=n("tyNb"),r=n("fXoL");function o(e,t){1&e&&(r.Jb(0,"div",16),r.Jb(1,"h4",17),r.dc(2,"Welcome! I'm here to help you."),r.Ib(),r.Jb(3,"ul"),r.Jb(4,"li"),r.Jb(5,"p"),r.dc(6,"I want to help you to learn Python 3. This tutorial is developed for Beginners. It covers various topics like what is variable, what is a list, what is a tuple, and many topics."),r.Ib(),r.Ib(),r.Jb(7,"li"),r.Jb(8,"p"),r.dc(9,"It teaches you how to start coding from scratch."),r.Ib(),r.Ib(),r.Jb(10,"li"),r.Jb(11,"p"),r.dc(12,"It's packed with various coding examples."),r.Ib(),r.Ib(),r.Jb(13,"li"),r.Jb(14,"p"),r.dc(15,"Hope you are excited. So, let's start."),r.Ib(),r.Ib(),r.Ib(),r.Hb(16,"hr"),r.Jb(17,"footer",18),r.dc(18,"Rahul Patel"),r.Ib(),r.Jb(19,"button",19),r.Jb(20,"span",20),r.dc(21,"\xd7"),r.Ib(),r.Ib(),r.Ib())}const s=[{path:"",redirectTo:"introduction",pathMatch:"full"},{path:"introduction",component:(()=>{class e{constructor(){this.languages=["python"],this.helloWorldCode="\ndef main():\n    print('Hello World!')\n\nif __name__ == '__main__':\n    main()".trim(),this.helloWorldCodeOutput="Hello World!".trim(),this.isAlreadyVisited=!0}ngOnInit(){this.getLanguage()||(this.setLanguage("true"),this.isAlreadyVisited=!1)}getLanguage(){return!(null===localStorage.getItem("welcomeToPythonLanguage"))}setLanguage(e){localStorage.setItem("welcomeToPythonLanguage",e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-introduction"]],decls:121,vars:4,consts:[[1,"container"],["class","alert alert-warning alert-dismissible fade show shadow-sm","role","alert",4,"ngIf"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-3","col-sm-12"],["src","../../../assets/images/languages-logo/python-logo.png","alt","Python Logo",1,"rounded","img-fluid"],[1,"col-lg-9","col-sm-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"col-lg-12"],[1,"table","table-bordered","table-striped","table-inverse","w-100"],[1,"thead-inverse","text-center"],[1,"card-text"],[3,"languages","highlight"],[3,"highlight"],["role","alert",1,"alert","alert-warning","alert-dismissible","fade","show","shadow-sm"],[1,"alert-heading"],[1,"blockquote-footer","text-right"],["type","button","data-dismiss","alert","aria-label","Close",1,"close"],["aria-hidden","true"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.cc(1,o,22,0,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"div",5),r.Hb(6,"img",6),r.Ib(),r.Jb(7,"div",7),r.Jb(8,"h5",8),r.dc(9,"What is Python?"),r.Ib(),r.Hb(10,"hr"),r.Jb(11,"p",9),r.dc(12," Python is an interpreted, object-oriented, high-level programming language with dynamic semantics. "),r.Ib(),r.Jb(13,"p",9),r.dc(14," Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. "),r.Ib(),r.Jb(15,"p",9),r.dc(16," Python is easy to learn yet powerful and versatile scripting language, which makes it attractive for Application Development. "),r.Ib(),r.Jb(17,"p",9),r.dc(18," Python works on different platforms like Windows, Mac, Linux, Raspberry Pi, etc. "),r.Ib(),r.Jb(19,"p",9),r.dc(20," Python has a simple syntax similar to the English language. "),r.Ib(),r.Jb(21,"p",9),r.dc(22," Python can be used to handle big data and perform complex mathematics and it is widely used in Artificial Intelligence, Natural Language Generation, Neural Networks and other advanced fields of Computer Science. "),r.Ib(),r.Jb(23,"p",9),r.dc(24," Many large companies use the Python programming language include NASA, Google, YouTube, BitTorrent, etc. "),r.Ib(),r.Jb(25,"p",9),r.dc(26," PY (.py) is a script file format used by Python. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(27,"div",2),r.Jb(28,"div",3),r.Jb(29,"div",4),r.Jb(30,"div",10),r.Jb(31,"h5",8),r.dc(32,"History of Python"),r.Ib(),r.Hb(33,"hr"),r.Jb(34,"p",9),r.dc(35," Python was envisioned in the late 1980s as a successor to the ABC language. "),r.Ib(),r.Jb(36,"p",9),r.dc(37," Python 2.0, released in 2000, introduced features like list comprehensions and a garbage collection system with reference counting. "),r.Ib(),r.Jb(38,"p",9),r.dc(39," Python 3.0, released in 2008, was a major revision of the language that is not completely backward-compatible, and much Python 2 code does not run unmodified on Python 3. "),r.Ib(),r.Jb(40,"p",9),r.dc(41," The Python 2 language was officially discontinued in 2020 and Python 2.7.18 is the last Python 2.7 release and therefore the last Python 2 release. No more security patches or other improvements will be released for it. "),r.Ib(),r.Jb(42,"p",9),r.dc(43," Only Python 3.5.x and later are supported. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(44,"div",2),r.Jb(45,"div",3),r.Jb(46,"div",4),r.Jb(47,"div",10),r.Jb(48,"h5",8),r.dc(49,"Python 2 vs Python 3"),r.Ib(),r.Hb(50,"hr"),r.Jb(51,"table",11),r.Jb(52,"thead",12),r.Jb(53,"tr"),r.Jb(54,"th"),r.dc(55,"Python 2"),r.Ib(),r.Jb(56,"th"),r.dc(57,"Python 3"),r.Ib(),r.Ib(),r.Ib(),r.Jb(58,"tbody"),r.Jb(59,"tr"),r.Jb(60,"td"),r.dc(61," Python 2 was released in 2000. "),r.Ib(),r.Jb(62,"td"),r.dc(63," Python 3 was released in 2008. "),r.Ib(),r.Ib(),r.Jb(64,"tr"),r.Jb(65,"td"),r.dc(66," Rules of ordering comparison are very complex. "),r.Ib(),r.Jb(67,"td"),r.dc(68," Rules of ordering comparisons have been simplified. "),r.Ib(),r.Ib(),r.Jb(69,"tr"),r.Jb(70,"td"),r.dc(71," Here print is available as keyword. "),r.Ib(),r.Jb(72,"td"),r.dc(73," Here print is available as function i.e. print(). "),r.Ib(),r.Ib(),r.Jb(74,"tr"),r.Jb(75,"td"),r.dc(76," Python 3 is not backwardly compatible with Python 2. "),r.Ib(),r.Jb(77,"td"),r.dc(78," Not difficult to convert python 2 code into python 3. "),r.Ib(),r.Ib(),r.Jb(79,"tr"),r.Jb(80,"td"),r.dc(81," Rules of ordering comparison are very complex. "),r.Ib(),r.Jb(82,"td"),r.dc(83," Rules of ordering comparisons have been simplified. "),r.Ib(),r.Ib(),r.Jb(84,"tr"),r.Jb(85,"td"),r.dc(86,' In Python 2, you require to define them with "u" in order to store Unicode string value. '),r.Ib(),r.Jb(87,"td"),r.dc(88," In Python 3, default storing of strings is Unicode. "),r.Ib(),r.Ib(),r.Jb(89,"tr"),r.Jb(90,"td"),r.dc(91," The syntax of Python 2 was comparatively difficult to understand. "),r.Ib(),r.Jb(92,"td"),r.dc(93," The syntax is simpler and easily understandable. "),r.Ib(),r.Ib(),r.Jb(94,"tr"),r.Jb(95,"td"),r.dc(96," When two integers are divided, you always provide integer value. "),r.Ib(),r.Jb(97,"td"),r.dc(98," Whenever two integers are divided, you get a float value. "),r.Ib(),r.Ib(),r.Jb(99,"tr"),r.Jb(100,"td"),r.dc(101," Here the xrange() is used for iterations. "),r.Ib(),r.Jb(102,"td"),r.dc(103," Here the range() is used for iterations. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(104,"div",2),r.Jb(105,"div",3),r.Jb(106,"div",4),r.Jb(107,"div",10),r.Jb(108,"h5",8),r.dc(109,"Example: Python 3 Code"),r.Ib(),r.Hb(110,"hr"),r.Jb(111,"div",13),r.Jb(112,"p"),r.dc(113,"How python 3 code looks like."),r.Ib(),r.Jb(114,"pre"),r.Hb(115,"code",14),r.Ib(),r.Jb(116,"p"),r.Jb(117,"strong"),r.dc(118,"Output:"),r.Ib(),r.Ib(),r.Jb(119,"pre"),r.Hb(120,"code",15),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(1),r.Ub("ngIf",!t.isAlreadyVisited),r.wb(114),r.Ub("languages",t.languages)("highlight",t.helloWorldCode),r.wb(5),r.Ub("highlight",t.helloWorldCodeOutput))},directives:[b.j,i.b],styles:[""]}),e})()},{path:"installation-steps",component:(()=>{class e{constructor(){this.verifyPythonCommandWindows="python --version",this.downloadPythonCommandLinux="\nsudo apt update\n\nsudo apt upgrade\n\nsudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget\ncurl llvm libncurses5-dev  libncursesw5-dev xz-utils tk-dev\n\nwget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz\n  ".trim(),this.installPythonCommandLinux="\ntar xvf Python-3.8.3.tgz\n\ncd Python-3.8.3\n\n./configure --enable-optimizations --with-ensurepip=install\n\nmake -j 8\n\nsudo make altinstall\n  ".trim(),this.verifyPythonCommandUbuntu="python3.8 --version"}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-installation-steps"]],decls:213,vars:4,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"mb-3"],[1,"card-text","text-justify"],["target","_blank","href","https://www.python.org/downloads/"],["src","../../../assets/images/python/installation-steps/windows/1_python.org.PNG","alt","Step 1",1,"img-fluid"],[1,"text-center"],["src","../../../assets/images/python/installation-steps/windows/2_python_installation_step_1.PNG","alt","Step 2",1,"img-fluid"],["src","../../../assets/images/python/installation-steps/windows/3_python_installation_step_2.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/installation-steps/windows/4_python_installation_step_3.PNG","alt","Step 4",1,"img-fluid"],[3,"highlight"],["src","../../../assets/images/python/installation-steps/windows/5_python_validation_step.PNG","alt","Step 5",1,"img-fluid"],["target","_blank","href","https://www.python.org/ftp/python/"],["target","_blank","href","https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz"],["src","../../../assets/images/python/installation-steps/ubuntu/1_download_python.PNG","alt","Step 1",1,"img-fluid"],["src","../../../assets/images/python/installation-steps/ubuntu/2_installation.PNG","alt","Step 2",1,"img-fluid"],["src","../../../assets/images/python/installation-steps/ubuntu/3_verify_python.PNG","alt","Step 3",1,"img-fluid"],[1,"card-text"],["target","_blank","href","https://www.jetbrains.com/pycharm/download/"],["src","../../../assets/images/python/pycharm-installation-steps/1_download_pycharm.PNG","alt","Step 1",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/2_installation_start.PNG","alt","Step 2",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/3_select_destination_folder.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/4_select_installation_options.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/5_start_menu_folder.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/6_installation_progress.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/7_installation_completed.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/8_privacy_policy.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/9_data_share.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/10_select_theme.PNG","alt","Step 3",1,"img-fluid"],["src","../../../assets/images/python/pycharm-installation-steps/11_start_up.PNG","alt","Step 3",1,"img-fluid"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Python 3 Installation Steps (Windows)"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"div",6),r.Jb(9,"p",7),r.Jb(10,"strong"),r.dc(11,"Step 1:"),r.Ib(),r.dc(12," To download and install Python 3 visit the official website of Python "),r.Jb(13,"a",8),r.dc(14,"https://www.python.org/downloads/"),r.Ib(),r.dc(15," and download required version. "),r.Ib(),r.Jb(16,"div"),r.Hb(17,"img",9),r.Ib(),r.Ib(),r.Jb(18,"div",6),r.Jb(19,"p",7),r.Jb(20,"strong"),r.dc(21,"Step 2:"),r.Ib(),r.dc(22," Once the download is complete, run the exe for install Python. Now click on "),r.Jb(23,"strong"),r.dc(24,"Install Now"),r.Ib(),r.dc(25,". "),r.Ib(),r.Jb(26,"p",7),r.Jb(27,"strong"),r.dc(28,"Note:"),r.Ib(),r.dc(29," Please select "),r.Jb(30,"strong"),r.dc(31,"Add Python 3.8 to PATH"),r.Ib(),r.dc(32,", You don't have to set an Environment variable for Python 3 manually. "),r.Ib(),r.Jb(33,"div",10),r.Hb(34,"img",11),r.Ib(),r.Ib(),r.Jb(35,"div",6),r.Jb(36,"p",7),r.Jb(37,"strong"),r.dc(38,"Step 3:"),r.Ib(),r.dc(39," You can see your Python installation. This will take some time. "),r.Ib(),r.Jb(40,"div",10),r.Hb(41,"img",12),r.Ib(),r.Ib(),r.Jb(42,"div",6),r.Jb(43,"p",7),r.Jb(44,"strong"),r.dc(45,"Step 4:"),r.Ib(),r.dc(46,' After few minutes, you can see a screen that says the Setup was successful. Now click on "Close" button. '),r.Ib(),r.Jb(47,"div",10),r.Hb(48,"img",13),r.Ib(),r.Ib(),r.Jb(49,"div",6),r.Jb(50,"p",7),r.Jb(51,"strong"),r.dc(52,"Step 5:"),r.Ib(),r.dc(53," The final step, validate whether Python 3 is successfully installed or not. Open the command prompt and execute the below command. "),r.Ib(),r.Jb(54,"pre"),r.Hb(55,"code",14),r.Ib(),r.Jb(56,"div",10),r.Hb(57,"img",15),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(58,"div",1),r.Jb(59,"div",2),r.Jb(60,"div",3),r.Jb(61,"div",4),r.Jb(62,"h5",5),r.dc(63,"Python 3 Installation Steps (Ubuntu)"),r.Ib(),r.Hb(64,"hr"),r.Jb(65,"div",6),r.Jb(66,"p",7),r.Jb(67,"strong"),r.dc(68,"Step 1:"),r.Ib(),r.dc(69," To download Python 3 binaries visit the official website of Python "),r.Jb(70,"a",16),r.dc(71,"https://www.python.org/ftp/python/"),r.Ib(),r.dc(72," and download required version. "),r.Ib(),r.Jb(73,"p",7),r.Jb(74,"strong"),r.dc(75,"Note:"),r.Ib(),r.dc(76," Please download the right binaries for ubuntu. Here we are going to use "),r.Jb(77,"a",17),r.dc(78,"Python 3.8.3"),r.Ib(),r.dc(79,". "),r.Ib(),r.Jb(80,"div",7),r.Jb(81,"p"),r.Jb(82,"strong"),r.dc(83,"Commands:"),r.Ib(),r.Ib(),r.Jb(84,"pre"),r.Hb(85,"code",14),r.Ib(),r.Ib(),r.Jb(86,"div",10),r.Hb(87,"img",18),r.Ib(),r.Ib(),r.Jb(88,"div",6),r.Jb(89,"p",7),r.Jb(90,"strong"),r.dc(91,"Step 2:"),r.Ib(),r.dc(92," Once the download is complete, follow the below commands. "),r.Ib(),r.Jb(93,"div",7),r.Jb(94,"p"),r.Jb(95,"strong"),r.dc(96,"Commands:"),r.Ib(),r.Ib(),r.Jb(97,"pre"),r.Hb(98,"code",14),r.Ib(),r.Ib(),r.Jb(99,"div",10),r.Hb(100,"img",19),r.Ib(),r.Ib(),r.Jb(101,"div",6),r.Jb(102,"p",7),r.Jb(103,"strong"),r.dc(104,"Step 3:"),r.Ib(),r.dc(105," The final step, validate whether Python 3 is successfully installed or not. Execute the below command. "),r.Ib(),r.Jb(106,"div",7),r.Jb(107,"p"),r.Jb(108,"strong"),r.dc(109,"Command:"),r.Ib(),r.Ib(),r.Jb(110,"pre"),r.Hb(111,"code",14),r.Ib(),r.Ib(),r.Jb(112,"div",10),r.Hb(113,"img",20),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(114,"div",1),r.Jb(115,"div",2),r.Jb(116,"div",3),r.Jb(117,"div",4),r.Jb(118,"h5",5),r.dc(119,"PyCharm Installation Steps (Ubuntu)"),r.Ib(),r.Hb(120,"hr"),r.Jb(121,"div",6),r.Jb(122,"p",21),r.Jb(123,"strong"),r.dc(124,"Step 1:"),r.Ib(),r.dc(125," To download and install PyCharm visit the official website of PyCharm "),r.Jb(126,"a",22),r.dc(127,"https://www.jetbrains.com/pycharm/download/"),r.Ib(),r.dc(128," and download Community version. "),r.Ib(),r.Jb(129,"div",10),r.Hb(130,"img",23),r.Ib(),r.Ib(),r.Jb(131,"div",6),r.Jb(132,"p",7),r.Jb(133,"strong"),r.dc(134,"Step 2:"),r.Ib(),r.dc(135," Once the download is complete, run the installer for install PyCharm. The setup wizard will be launch. Click on "),r.Jb(136,"strong"),r.dc(137,"Next"),r.Ib(),r.dc(138,". "),r.Ib(),r.Jb(139,"div",10),r.Hb(140,"img",24),r.Ib(),r.Ib(),r.Jb(141,"div",6),r.Jb(142,"p",7),r.Jb(143,"strong"),r.dc(144,"Step 3:"),r.Ib(),r.dc(145," Choose destination folder for PyCharm editor. Click on "),r.Jb(146,"strong"),r.dc(147,"Next"),r.Ib(),r.Ib(),r.Jb(148,"div",10),r.Hb(149,"img",25),r.Ib(),r.Ib(),r.Jb(150,"div",6),r.Jb(151,"p",7),r.Jb(152,"strong"),r.dc(153,"Step 4:"),r.Ib(),r.dc(154," Select installation options for PyCharm editor and click on "),r.Jb(155,"strong"),r.dc(156,"Next"),r.Ib(),r.Ib(),r.Jb(157,"div",10),r.Hb(158,"img",26),r.Ib(),r.Ib(),r.Jb(159,"div",6),r.Jb(160,"p",7),r.Jb(161,"strong"),r.dc(162,"Step 5:"),r.Ib(),r.dc(163," Choose the start menu folder. Click on "),r.Jb(164,"strong"),r.dc(165,"Install"),r.Ib(),r.Ib(),r.Jb(166,"div",10),r.Hb(167,"img",27),r.Ib(),r.Ib(),r.Jb(168,"div",6),r.Jb(169,"p",7),r.Jb(170,"strong"),r.dc(171,"Step 6:"),r.Ib(),r.dc(172," The installation will take some time. Please wait till it finishes the installation. "),r.Ib(),r.Jb(173,"div",10),r.Hb(174,"img",28),r.Ib(),r.Ib(),r.Jb(175,"div",6),r.Jb(176,"p",7),r.Jb(177,"strong"),r.dc(178,"Step 7:"),r.Ib(),r.dc(179," Please reboot your system which will automatically set the environment variables for PyCharm. "),r.Ib(),r.Jb(180,"div",10),r.Hb(181,"img",29),r.Ib(),r.Ib(),r.Jb(182,"div",6),r.Jb(183,"p",7),r.Jb(184,"strong"),r.dc(185,"Step 8:"),r.Ib(),r.dc(186," Accept the privacy policy and click on "),r.Jb(187,"strong"),r.dc(188,"Continue"),r.Ib(),r.dc(189,". "),r.Ib(),r.Jb(190,"div",10),r.Hb(191,"img",30),r.Ib(),r.Ib(),r.Jb(192,"div",6),r.Jb(193,"p",7),r.Jb(194,"strong"),r.dc(195,"Step 9:"),r.Ib(),r.dc(196," Choose data sharing option as per your convenience. "),r.Ib(),r.Jb(197,"div",10),r.Hb(198,"img",31),r.Ib(),r.Ib(),r.Jb(199,"div",6),r.Jb(200,"p",7),r.Jb(201,"strong"),r.dc(202,"Step 10:"),r.Ib(),r.dc(203," Choose editor theme. "),r.Ib(),r.Jb(204,"div",10),r.Hb(205,"img",32),r.Ib(),r.Ib(),r.Jb(206,"div",6),r.Jb(207,"p",7),r.Jb(208,"strong"),r.dc(209,"Step 9:"),r.Ib(),r.dc(210," Create new project from Start up window. "),r.Ib(),r.Jb(211,"div",10),r.Hb(212,"img",33),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(55),r.Ub("highlight",t.verifyPythonCommandWindows),r.wb(30),r.Ub("highlight",t.downloadPythonCommandLinux),r.wb(13),r.Ub("highlight",t.installPythonCommandLinux),r.wb(13),r.Ub("highlight",t.verifyPythonCommandUbuntu))},directives:[i.b],styles:[""]}),e})()},{path:"indentation-comments-statements",component:(()=>{class e{constructor(){this.languages=["python"],this.indentationExampleCode="\nif True:\n    print('True')\nelse:\n    print('False')\n  ".trim(),this.singleLineCommentExampleCode="\nif True:\n    print('True')  # true block\nelse:\n    print('False')  # false block\n  ".trim(),this.multiLineCommentExampleCode='\n"""\nThis is the example of multi line comment.\n"""\nif True:\n    print(\'True\')\nelse:\n    print(\'False\')\n  '.trim(),this.loopingStatementExampleCode="\nfor i in range(10):\n    print(i)  # 0 1 2 3 4 5 6 7 8 9\n  "}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-indentation-comments-statements"]],decls:80,vars:8,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],["role","alert",1,"alert","alert-success"],[3,"languages","highlight"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Indentations in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," Python uses indentation to indicate a block of code. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," Indentation refers to the spaces at the beginning of a code line. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," Most of the programming languages like C, C++, Java use braces { } to define a block of code. Python use indentation to highlighting the blocks of code. "),r.Ib(),r.Jb(14,"p",6),r.dc(15," Whitespace is used for indentation in Python. All statements with the same distance to the right belong to the same block of code. If a block has to be more deeply nested, it is simply indented further to the right. "),r.Ib(),r.Jb(16,"p",6),r.dc(17," Python will give you an error if you skip the indentation. "),r.Ib(),r.Jb(18,"div",7),r.Jb(19,"strong"),r.dc(20,"Note:"),r.Ib(),r.dc(21," 4 Spaces = Indentation. "),r.Ib(),r.Jb(22,"p",6),r.Jb(23,"strong"),r.dc(24,"Indentation Example:"),r.Ib(),r.Ib(),r.Jb(25,"pre"),r.Hb(26,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(27,"div",1),r.Jb(28,"div",2),r.Jb(29,"div",3),r.Jb(30,"div",4),r.Jb(31,"h5",5),r.dc(32,"Comments in Python"),r.Ib(),r.Hb(33,"hr"),r.Jb(34,"p",6),r.dc(35," Comments can be used to make the code more readable. "),r.Ib(),r.Jb(36,"p",6),r.dc(37," Comments are usually helpful to someone maintaining or enhancing your code when you are no longer around to answer questions about it. "),r.Ib(),r.Jb(38,"p",6),r.dc(39," Comments are the useful information that the developers provide to make the reader understand the source code. "),r.Ib(),r.Jb(40,"p",6),r.dc(41," Comments generally starts with a #, and Python interpreter will ignore them. Multi-line comments generally use for Function specification. "),r.Ib(),r.Jb(42,"div",7),r.Jb(43,"p"),r.Jb(44,"strong"),r.dc(45,"Note:"),r.Ib(),r.Ib(),r.Jb(46,"p"),r.Jb(47,"strong"),r.dc(48,"Single Line Comment:"),r.Ib(),r.dc(49," # comment"),r.Ib(),r.Jb(50,"p"),r.Jb(51,"strong"),r.dc(52,"Multi-Line string as Comment:"),r.Ib(),r.dc(53,' Text enclosed with (""") delimiter. There should be no space between delimiter.'),r.Ib(),r.Ib(),r.Jb(54,"p",6),r.Jb(55,"strong"),r.dc(56,"Single Comments Example:"),r.Ib(),r.Ib(),r.Jb(57,"pre"),r.Hb(58,"code",8),r.Ib(),r.Jb(59,"p",6),r.Jb(60,"strong"),r.dc(61,"Multi-line Comments Example:"),r.Ib(),r.Ib(),r.Jb(62,"pre"),r.Hb(63,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(64,"div",1),r.Jb(65,"div",2),r.Jb(66,"div",3),r.Jb(67,"div",4),r.Jb(68,"h5",5),r.dc(69,"Statements in Python"),r.Ib(),r.Hb(70,"hr"),r.Jb(71,"p",6),r.dc(72," A set of instructions written in the source code know as statements. "),r.Ib(),r.Jb(73,"p",6),r.dc(74," There are various types of statements like Assignment statement, Conditional statement, Looping statements etc. "),r.Ib(),r.Jb(75,"p",6),r.Jb(76,"strong"),r.dc(77,"Looping Statement Example:"),r.Ib(),r.Ib(),r.Jb(78,"pre"),r.Hb(79,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(26),r.Ub("languages",t.languages)("highlight",t.indentationExampleCode),r.wb(32),r.Ub("languages",t.languages)("highlight",t.singleLineCommentExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.multiLineCommentExampleCode),r.wb(16),r.Ub("languages",t.languages)("highlight",t.loopingStatementExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"variables",component:(()=>{class e{constructor(){this.languages=["python"],this.variableExampleCode="\nnumber = 21\n\nstring_in_single_quote = 'String'\n\nstring_in_double_quote = \"String\"\n\nfractional = 3.14\n\nboolean = True\n\n# assign values to multiple variables in one line\nx, y, z = 10, True, 'Data'\n\n# assign same value to multiple variables\np = q = r = 'Same Value'\n\n\nprint(number)  # 21\n\nprint(string_in_single_quote)  # String\n\nprint(string_in_double_quote)  # String\n\nprint(fractional)  # 3.14\n\nprint(boolean)  # True\n\nprint(x, y, z)  # 10 True Data\n\nprint(p, q, r)  # Same Value Same Value Same Value\n  ".trim(),this.localVariableExampleCode="\ndef local_example():\n\n    local_variable = 'Local Variable'\n\n    print(local_variable)  # Local Variable\n\nlocal_example()\n  ".trim(),this.localVariableExampleErrorCode="\ndef local_example():\n\n    local_variable = 'Local Variable'\n\n    print(local_variable)\n\nprint(local_variables)\nlocal_example()\n  ".trim(),this.localVariableExampleErrorCodeOutput="\nTraceback (most recent call last):\nFile \"variables.py\", line 5, in <module>\n    print(local_variables)\nNameError: name 'local_variables' is not defined\n    ".trim(),this.globalVariableExampleCode="\nglobal_variable = 'Global Variable'\n\ndef global_example():\n\n    global global_variable\n\n    print(global_variable)  # Global Variable\n\n    global_variable = 'Modified Global Variable'\n\n    print(global_variable)  # Modified Global Variable\n\n\nglobal_example()\n\nglobal_variable = 'Modified Global Variable outside method'\n\nprint(global_variable)  # Modified Global Variable outside method\n    ".trim(),this.idFunctionExampleCode="\nx = 10\ny = 10\nz = -10\nstring = 'id() function'\n\nprint(id(x))       # 140706238591536\nprint(id(y))       # 140706238591536\nprint(id(z))       # 1624741008560\nprint(id(string))  # 1624740688944\n    ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-variables"]],decls:200,vars:12,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],["role","alert",1,"alert","alert-success"],["role","alert",1,"alert","alert-warning"],["href","https://www.python.org/dev/peps/pep-0008/","target","_blank"],[3,"languages","highlight"],[1,"col-lg-6","col-sm-12"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Variables in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," Variables are containers for storing data values. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," Python has no command for declaring a variable. We don't need to specify the type of variable because python is smart enough to get variable type. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," A variable is created the moment you first assign a value to it. "),r.Ib(),r.Jb(14,"div",7),r.Jb(15,"p",6),r.Jb(16,"strong"),r.dc(17,"Note:"),r.Ib(),r.dc(18," String variables can be declared either by using single ('') or double (\"\") quotes. "),r.Ib(),r.Jb(19,"p",6),r.Jb(20,"strong"),r.dc(21,"Recommend:"),r.Ib(),r.dc(22," use lowercase letters for declaring variable name. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(23,"div",1),r.Jb(24,"div",2),r.Jb(25,"div",3),r.Jb(26,"div",4),r.Jb(27,"h5",5),r.dc(28,"Variables Naming"),r.Ib(),r.Hb(29,"hr"),r.Jb(30,"p",6),r.dc(31," All the characters except the first character may be an alphabet of lower-case(a-z), upper-case (A-Z), underscore, or digit (0-9). "),r.Ib(),r.Jb(32,"p",6),r.dc(33," Identifier name must not be similar to any keyword defined in the python language. "),r.Ib(),r.Jb(34,"p",6),r.dc(35," Variable names are case-sensitive i.e. first and First is not the same. "),r.Ib(),r.Jb(36,"p",6),r.dc(37," The first character of the variable must be an alphabet or underscore ( _ ). "),r.Ib(),r.Jb(38,"p",6),r.dc(39," Variable name must not contain any white-space, or special character (!, @, #, %, ^, &, *). "),r.Ib(),r.Jb(40,"p",6),r.dc(41," Example: 1_google_url, %i, #first - "),r.Jb(42,"strong"),r.dc(43,"Invalid Variables"),r.Ib(),r.Ib(),r.Jb(44,"p",6),r.dc(45," Example: github_url, initialize, _first_name - "),r.Jb(46,"strong"),r.dc(47,"Valid Variables"),r.Ib(),r.Ib(),r.Jb(48,"div",8),r.Jb(49,"p",6),r.Jb(50,"strong"),r.dc(51,"Remember:"),r.Ib(),r.dc(52," Variable names are case-sensitive. For more details please visit "),r.Jb(53,"a",9),r.dc(54,"PEP8 Codding Style"),r.Ib(),r.dc(55,". "),r.Ib(),r.Jb(56,"div",6),r.Jb(57,"p"),r.Jb(58,"strong"),r.dc(59,"Note:"),r.Ib(),r.Ib(),r.Jb(60,"p"),r.dc(61,"Python allows you to assign values to multiple variables in one line."),r.Ib(),r.Jb(62,"p"),r.dc(63,"Python allows us to assign a value to multiple variables in a single statement which is known as "),r.Jb(64,"strong"),r.dc(65,"multiple assignments"),r.Ib(),r.dc(66,"."),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(67,"div",1),r.Jb(68,"div",2),r.Jb(69,"div",3),r.Jb(70,"div",4),r.Jb(71,"h5",5),r.dc(72,"Example"),r.Ib(),r.Hb(73,"hr"),r.Jb(74,"p",6),r.dc(75," A basic example of how to declare and assign value to the variable. "),r.Ib(),r.Jb(76,"pre"),r.Hb(77,"code",10),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(78,"div",1),r.Jb(79,"div",2),r.Jb(80,"div",3),r.Jb(81,"div",4),r.Jb(82,"h5",5),r.dc(83,"Scope of Variables"),r.Ib(),r.Hb(84,"hr"),r.Jb(85,"p",6),r.dc(86," As we know, variables are the containers for storing data values. In depth, The location where we can find a variable and also access it if required is called the "),r.Jb(87,"strong"),r.dc(88,"scope of a variable"),r.Ib(),r.dc(89,". "),r.Ib(),r.Jb(90,"p",6),r.Jb(91,"strong"),r.dc(92,"Types of scope:"),r.Ib(),r.Ib(),r.Jb(93,"p",6),r.Jb(94,"strong"),r.dc(95,"Local Scope:"),r.Ib(),r.dc(96," Variables that are created inside of a function are known as "),r.Jb(97,"strong"),r.dc(98,"local variables"),r.Ib(),r.dc(99," and can only be used inside the function. "),r.Ib(),r.Jb(100,"p",6),r.Jb(101,"strong"),r.dc(102,"Global Scope:"),r.Ib(),r.dc(103," Variables that are created outside of a function are known as "),r.Jb(104,"strong"),r.dc(105,"global variables"),r.Ib(),r.dc(106," and can be used by everyone, both inside of functions and outside. "),r.Ib(),r.Ib(),r.Ib(),r.Jb(107,"div",3),r.Jb(108,"div",4),r.Hb(109,"hr"),r.Jb(110,"h5",5),r.dc(111,"Examples: Local vs Global"),r.Ib(),r.Hb(112,"hr"),r.Jb(113,"div",3),r.Jb(114,"div",11),r.Jb(115,"p"),r.Jb(116,"strong"),r.dc(117,"Local Variable"),r.Ib(),r.Ib(),r.Jb(118,"pre"),r.Hb(119,"code",10),r.Ib(),r.Jb(120,"p",6),r.dc(121," With local scope, we can use "),r.Jb(122,"strong"),r.dc(123,"local_variable"),r.Ib(),r.dc(124," inside "),r.Jb(125,"strong"),r.dc(126,"local_example()"),r.Ib(),r.dc(127," and we can not access "),r.Jb(128,"strong"),r.dc(129,"local_variable"),r.Ib(),r.dc(130," outside of "),r.Jb(131,"strong"),r.dc(132,"local_example()"),r.Ib(),r.dc(133,". "),r.Ib(),r.Jb(134,"p",6),r.dc(135," If you will try to access a local variable outside the function, Python will throw an exception. Like the below example. "),r.Ib(),r.Jb(136,"pre"),r.Hb(137,"code",10),r.Ib(),r.Jb(138,"p"),r.Jb(139,"strong"),r.dc(140,"Output:"),r.Ib(),r.Ib(),r.Jb(141,"pre"),r.Hb(142,"code",10),r.Ib(),r.Ib(),r.Jb(143,"div",11),r.Jb(144,"p"),r.Jb(145,"strong"),r.dc(146,"Global Variable"),r.Ib(),r.Ib(),r.Jb(147,"pre"),r.Hb(148,"code",10),r.Ib(),r.Jb(149,"p",6),r.dc(150," With global scope, we have declare one global variable "),r.Jb(151,"strong"),r.dc(152,"global_variable"),r.Ib(),r.dc(153," ant it is accessible inside as well as outside of the function. "),r.Ib(),r.Jb(154,"p",6),r.dc(155," For accessing global variable we need to use "),r.Jb(156,"strong"),r.dc(157,"global"),r.Ib(),r.dc(158," keyword before variable name. The "),r.Jb(159,"strong"),r.dc(160,"global_example()"),r.Ib(),r.dc(161," is invoked first. The execution order is very important in this example. Please try this example by yourself. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(162,"div",1),r.Jb(163,"div",2),r.Jb(164,"div",3),r.Jb(165,"div",4),r.Jb(166,"h5",5),r.dc(167,"id() method"),r.Ib(),r.Hb(168,"hr"),r.Jb(169,"p",6),r.dc(170," Return the identity of an object. "),r.Ib(),r.Jb(171,"p",6),r.dc(172," This is guaranteed to be unique among simultaneously existing objects. "),r.Ib(),r.Jb(173,"p",6),r.dc(174," CPython uses the object's memory address. "),r.Ib(),r.Jb(175,"p",6),r.dc(176," The id() function takes a single parameter "),r.Jb(177,"strong"),r.dc(178,"object"),r.Ib(),r.dc(179,". "),r.Ib(),r.Jb(180,"p"),r.Jb(181,"strong"),r.dc(182,"Example: id() function"),r.Ib(),r.Ib(),r.Jb(183,"pre"),r.Hb(184,"code",10),r.Ib(),r.Jb(185,"div",8),r.Jb(186,"div",6),r.Jb(187,"p"),r.Jb(188,"strong"),r.dc(189,"Note:"),r.Ib(),r.Ib(),r.Jb(190,"p"),r.dc(191,"It's important to note that everything in Python is an object, even numbers and Classes."),r.Ib(),r.Jb(192,"p"),r.dc(193,"Here, integer "),r.Jb(194,"strong"),r.dc(195,"x"),r.Ib(),r.dc(196," has a unique id. The id of the integer "),r.Jb(197,"strong"),r.dc(198,"y"),r.Ib(),r.dc(199," remains constant during the lifetime."),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(77),r.Ub("languages",t.languages)("highlight",t.variableExampleCode),r.wb(42),r.Ub("languages",t.languages)("highlight",t.localVariableExampleCode),r.wb(18),r.Ub("languages",t.languages)("highlight",t.localVariableExampleErrorCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.localVariableExampleErrorCodeOutput),r.wb(6),r.Ub("languages",t.languages)("highlight",t.globalVariableExampleCode),r.wb(36),r.Ub("languages",t.languages)("highlight",t.idFunctionExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"data-types-and-keywords",component:(()=>{class e{constructor(){this.languages=["python"],this.dataTypeExampleCode="\nnumber = 21\n\nstring_in_single_quote = 'String'\n\nfractional = 3.14\n\nboolean = True\n\nlst = ['Alpesh', 15, 70.16, True]\n\ntpl = ('Vishal', 80, False)\n\ndct = {'key': 'value'}\n\n\nprint(type(number))  # <class 'int'>\n\nprint(type(fractional))  # <class 'float'>\n\nprint(type(string_in_single_quote))  # <class 'str'>\n\nprint(type(boolean))  # <class 'bool'>\n\nprint(type(lst))  # <class 'list'>\n\nprint(type(tpl))  # <class 'tuple'>\n\nprint(type(dct))  # <class 'dict'>\n  ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-data-types"]],decls:157,vars:2,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"table","table-bordered","table-striped","table-inverse","w-100"],[1,"thead-inverse","text-center"],[3,"languages","highlight"],[1,"table","table-bordered","text-center","table-striped","table-inverse","w-100"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Data Types in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," Variables can store data of different types, and different types can do different things. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," Python is a dynamically typed language; hence we do not need to define the type of the variable while declaring it. The interpreter implicitly binds the value with its type. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," Python enables us to check the type of the variable used in the program. Python provides us the "),r.Jb(14,"strong"),r.dc(15,"type()"),r.Ib(),r.dc(16," function, which returns the data type of the variable passed. "),r.Ib(),r.Jb(17,"p",6),r.dc(18," Python has the following data types built-in by default, below are the categories: "),r.Ib(),r.Jb(19,"table",7),r.Jb(20,"thead",8),r.Jb(21,"tr"),r.Jb(22,"th"),r.dc(23,"Data Types"),r.Ib(),r.Jb(24,"th"),r.dc(25,"Built-in Class"),r.Ib(),r.Ib(),r.Ib(),r.Jb(26,"tbody"),r.Jb(27,"tr"),r.Jb(28,"td"),r.dc(29,"String"),r.Ib(),r.Jb(30,"td"),r.dc(31,"str"),r.Ib(),r.Ib(),r.Jb(32,"tr"),r.Jb(33,"td"),r.dc(34,"Numbers (including fractional & complex)"),r.Ib(),r.Jb(35,"td"),r.dc(36,"int, float, complex"),r.Ib(),r.Ib(),r.Jb(37,"tr"),r.Jb(38,"td"),r.dc(39,"Sequences"),r.Ib(),r.Jb(40,"td"),r.dc(41,"list, tuple, range"),r.Ib(),r.Ib(),r.Jb(42,"tr"),r.Jb(43,"td"),r.dc(44,"Dictionary i.e. Key-Value pair"),r.Ib(),r.Jb(45,"td"),r.dc(46,"dict"),r.Ib(),r.Ib(),r.Jb(47,"tr"),r.Jb(48,"td"),r.dc(49,"Set"),r.Ib(),r.Jb(50,"td"),r.dc(51,"set, frozenset"),r.Ib(),r.Ib(),r.Jb(52,"tr"),r.Jb(53,"td"),r.dc(54,"boolean"),r.Ib(),r.Jb(55,"td"),r.dc(56,"bool"),r.Ib(),r.Ib(),r.Jb(57,"tr"),r.Jb(58,"td"),r.dc(59,"Binary"),r.Ib(),r.Jb(60,"td"),r.dc(61,"bytes, bytearray, memoryview"),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(62,"div",1),r.Jb(63,"div",2),r.Jb(64,"div",3),r.Jb(65,"div",4),r.Jb(66,"h5",5),r.dc(67,"Example: Data Types"),r.Ib(),r.Hb(68,"hr"),r.Jb(69,"p",6),r.dc(70," Consider the following example to define the values of different data types and display its type. "),r.Ib(),r.Jb(71,"pre"),r.Hb(72,"code",9),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(73,"div",1),r.Jb(74,"div",2),r.Jb(75,"div",3),r.Jb(76,"div",4),r.Jb(77,"h5",5),r.dc(78,"Keywords in Python"),r.Ib(),r.Hb(79,"hr"),r.Jb(80,"p",6),r.dc(81," Python Keywords are special reserved words that convey a special meaning to the compiler/interpreter. "),r.Ib(),r.Jb(82,"p",6),r.dc(83," Each keyword has a special meaning and a specific operation. These keywords can't be used as a variable. "),r.Ib(),r.Jb(84,"p",6),r.dc(85," Following is the list of "),r.Jb(86,"strong"),r.dc(87,"Python Keywords"),r.Ib(),r.dc(88,". "),r.Ib(),r.Jb(89,"table",10),r.Jb(90,"tbody"),r.Jb(91,"tr"),r.Jb(92,"td"),r.dc(93,"and"),r.Ib(),r.Jb(94,"td"),r.dc(95,"as"),r.Ib(),r.Jb(96,"td"),r.dc(97,"asset"),r.Ib(),r.Jb(98,"td"),r.dc(99,"break"),r.Ib(),r.Jb(100,"td"),r.dc(101,"class"),r.Ib(),r.Ib(),r.Jb(102,"tr"),r.Jb(103,"td"),r.dc(104,"continue"),r.Ib(),r.Jb(105,"td"),r.dc(106,"def"),r.Ib(),r.Jb(107,"td"),r.dc(108,"del"),r.Ib(),r.Jb(109,"td"),r.dc(110,"elif"),r.Ib(),r.Jb(111,"td"),r.dc(112,"else"),r.Ib(),r.Ib(),r.Jb(113,"tr"),r.Jb(114,"td"),r.dc(115,"except"),r.Ib(),r.Jb(116,"td"),r.dc(117,"False"),r.Ib(),r.Jb(118,"td"),r.dc(119,"finally"),r.Ib(),r.Jb(120,"td"),r.dc(121,"for"),r.Ib(),r.Jb(122,"td"),r.dc(123,"from"),r.Ib(),r.Ib(),r.Jb(124,"tr"),r.Jb(125,"td"),r.dc(126,"global"),r.Ib(),r.Jb(127,"td"),r.dc(128,"if"),r.Ib(),r.Jb(129,"td"),r.dc(130,"import"),r.Ib(),r.Jb(131,"td"),r.dc(132,"in"),r.Ib(),r.Jb(133,"td"),r.dc(134,"is"),r.Ib(),r.Ib(),r.Jb(135,"tr"),r.Jb(136,"td"),r.dc(137,"lambda"),r.Ib(),r.Jb(138,"td"),r.dc(139,"None"),r.Ib(),r.Jb(140,"td"),r.dc(141,"nonlocal"),r.Ib(),r.Jb(142,"td"),r.dc(143,"not"),r.Ib(),r.Jb(144,"td"),r.dc(145,"or"),r.Ib(),r.Ib(),r.Jb(146,"tr"),r.Jb(147,"td"),r.dc(148,"pass"),r.Ib(),r.Jb(149,"td"),r.dc(150,"raise"),r.Ib(),r.Jb(151,"td"),r.dc(152,"return"),r.Ib(),r.Jb(153,"td"),r.dc(154,"True"),r.Ib(),r.Jb(155,"td"),r.dc(156,"try"),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(72),r.Ub("languages",t.languages)("highlight",t.dataTypeExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"numbers",component:(()=>{class e{constructor(){this.languages=["python"],this.numberIntDataTypeExampleCode="\na = 3112\n\nb = 35536\n\nc = -35536\n\n\nprint(type(a), a)  # <class 'int'> 3112\n\nprint(type(b), b)  # <class 'int'> 35536\n\nprint(type(c), c)  # <class 'int'> -35536\n  ".trim(),this.numberFloatDataTypeExampleCode="\na = 35.98\n\nb = -87.587\n\nc = -859.745\n\n\nprint(type(a), a)  # <class 'float'> 35.98\n\nprint(type(b), b)  # <class 'float'> -87.587\n\nprint(type(c), c)  # <class 'float'> -859.745\n  ".trim(),this.numberComplexDataTypeExampleCode="\na = 4j\n\nb = -10 + 9j\n\nc = 33 + -2j\n\n\nprint(type(a), a)  # <class 'complex'> 4j\n\nprint(type(b), b)  # <class 'complex'> (-10+9j)\n\nprint(type(c), c)  # <class 'complex'> (33-2j)\n  ".trim(),this.typeConversionNumberDataTypeExampleCode="\ninteger_num = 31  # int\n\nfloating_num = 3.14  # float\n\ncomplex_num = 3 + 8j  # complex\n\n# converting int => float\na = float(integer_num)\n\n# converting float => int\nb = int(floating_num)\n\n# converting float => complex\nc = complex(floating_num)\n\n# conversion from complex to int or float is not possible\n\nprint(a)  # 31.0\n\nprint(b)  # 3\n\nprint(c)  # (3.14+0j)\n  ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-numbers"]],decls:77,vars:8,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"h3"],[3,"languages","highlight"],["role","alert",1,"alert","alert-danger"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Numbers in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," The integer, float, and complex values belong to a Python Numbers data-type. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," Python creates Number objects when a number is assigned to a variable. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," Python supports three types of numeric data. "),r.Ib(),r.Jb(14,"div",6),r.Jb(15,"p",7),r.dc(16,"Int"),r.Ib(),r.Hb(17,"hr"),r.Jb(18,"p"),r.dc(19," Int, or integer, is a whole number, positive or negative, without decimals, of unlimited length. "),r.Ib(),r.Jb(20,"p"),r.Jb(21,"strong"),r.dc(22,"Example: Int number in Python"),r.Ib(),r.Ib(),r.Hb(23,"hr"),r.Jb(24,"pre"),r.Hb(25,"code",8),r.Ib(),r.Ib(),r.Jb(26,"div",6),r.Jb(27,"p",7),r.dc(28,"Float"),r.Ib(),r.Hb(29,"hr"),r.Jb(30,"p"),r.dc(31,' Float, or "floating point number" is a number, positive or negative, containing one or more decimals. Float can also be scientific numbers with an "e" to indicate the power of 10. '),r.Ib(),r.Jb(32,"p"),r.Jb(33,"strong"),r.dc(34,"Example: Float number in Python"),r.Ib(),r.Ib(),r.Hb(35,"hr"),r.Jb(36,"pre"),r.Hb(37,"code",8),r.Ib(),r.Ib(),r.Jb(38,"div",6),r.Jb(39,"p",7),r.dc(40,"Complex"),r.Ib(),r.Hb(41,"hr"),r.Jb(42,"p"),r.dc(43,' Complex numbers are written with a "j" as the imaginary part, like i.., x + iy where x and y denote the real and imaginary parts, respectively. Example of complex numbers 14.5j, 8 + 4.1j, etc. '),r.Ib(),r.Jb(44,"p"),r.Jb(45,"strong"),r.dc(46,"Example: Complex number in Python"),r.Ib(),r.Ib(),r.Hb(47,"hr"),r.Jb(48,"pre"),r.Hb(49,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(50,"div",1),r.Jb(51,"div",2),r.Jb(52,"div",3),r.Jb(53,"div",4),r.Jb(54,"h5",5),r.dc(55,"Type conversion"),r.Ib(),r.Hb(56,"hr"),r.Jb(57,"p",6),r.dc(58," Type conversion is also known as "),r.Jb(59,"strong"),r.dc(60,"Type Casting"),r.Ib(),r.dc(61,". "),r.Ib(),r.Jb(62,"p",6),r.dc(63," You can convert from one type to another with the "),r.Jb(64,"strong"),r.dc(65,"int(), float(), & complex()"),r.Ib(),r.dc(66," methods. "),r.Ib(),r.Jb(67,"div",9),r.Jb(68,"p",6),r.Jb(69,"strong"),r.dc(70,"Note:"),r.Ib(),r.dc(71," Conversion from complex numbers to integer or float is not possible. "),r.Ib(),r.Ib(),r.Jb(72,"p"),r.Jb(73,"strong"),r.dc(74,"Example: Type Conversion - Number"),r.Ib(),r.Ib(),r.Jb(75,"pre"),r.Hb(76,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(25),r.Ub("languages",t.languages)("highlight",t.numberIntDataTypeExampleCode),r.wb(12),r.Ub("languages",t.languages)("highlight",t.numberFloatDataTypeExampleCode),r.wb(12),r.Ub("languages",t.languages)("highlight",t.numberComplexDataTypeExampleCode),r.wb(27),r.Ub("languages",t.languages)("highlight",t.typeConversionNumberDataTypeExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"strings",component:(()=>{class e{constructor(){this.languages=["python"],this.howToCreateStringExampleCode="\nstring = 'single quotation marks'\n\nprint(string)  # single quotation marks\n\nstring = \"double quotation marks\"\n\nprint(string)  # double quotation marks\n".trim(),this.multiLineStringExampleCode="\n# Multiline String\nstring = \"\"\"Python string is the collection of the\ncharacters surrounded by single quotes,\ndouble quotes, or triple quotes.\"\"\"\n\n# OR\n\nstring = '''Python string is the collection of the\ncharacters surrounded by single quotes,\ndouble quotes, or triple quotes.\n'''\n\nprint(string)\n".trim(),this.stringIndexingExampleCode="\nstring = 'String Indexing Example'\n\nprint(string[0])  # S\n".trim(),this.stringSlicingExampleCode="\nstring = 'String Indexing Example'\n\n# return character from 7 position to 12 position i.e. Index\nprint(string[7:12])\n\n# return character from 7 position to 12 position and skip character by step i.e. Idx\nprint(string[7:12:2])\n".trim(),this.stringSlicingNegativeIndexExampleCode="\nstring = 'String Indexing Example'\n\n# return character from -8 position to end of the string i.e. Example\nprint(string[-7:])\n\n# return character in reverse order i.e. elpmaxE gnixednI gnirtS\nprint(string[::-1])\n".trim(),this.stringLengthExampleCode="\nstring = 'String Indexing Example'\n\nprint(string)  # String Indexing Example\nprint(len(string))  # 23\n\n# You can concatenate existing string with other string\nstring += ' Appended String'\n\nprint(string)  # String Indexing Example Appended String\nprint(len(string))  # 38\n\n# Alternate way of concatenate string\nstring = string + ' Added another string'\n\nprint(string)  # String Indexing Example Appended String Added another string\nprint(len(string))  # 38\n".trim(),this.stringCapitalizeExampleCode="\nstring = 'string capitalize example'\n\nprint(string.capitalize())  # String capitalize example\n  ".trim(),this.stringCasefoldExampleCode="\nstring = 'String Casefold Example'\n\nprint(string.casefold())  # string Casefold example\n  ".trim(),this.stringCountExampleCode="\nstring = 'String Count Example'\n\nprint(string.count('e'))  # 1\n\nprint(string.count('e', 13))  # 1\n\nprint(string.count('e', 0, 7))  # 0\n  ".trim(),this.stringStripExampleCode="\nstring = '***Hello World***'\n\nprint(string.lstrip('*'))  # Hello World***\n\nprint(string.rstrip('*'))  # ***Hello World\n\nprint(string.strip('*'))  # Hello World\n  ".trim(),this.stringJoinExampleCode="\nstring = ' '\n\nstring_list = ['My', 'name', 'is', 'Rahul']\n\nprint(string.join(string_list))  # My name is Rahul\n  ".trim(),this.stringSplitExampleCode="\nstring = 'Hello World!Good Vibes!Good Thoughts'\n\nprint(string.split('!'))  # ['Hello World', 'Good Vibes', 'Good Thoughts']\n\nprint(string.rsplit('!'))  # ['Hello World', 'Good Vibes', 'Good Thoughts']\n  ".trim(),this.stringIndexExampleCode="\nstring = 'Hello, What is your name? What is your hobby?'\n\nprint(string.index('your'))  # 15\n\nprint(string.rindex('your'))  # 34\n  ".trim(),this.stringFindExampleCode="\nstring = 'Hello, What is your name? What is your hobby?'\n\nprint(string.find('your'))  # 15\n\nprint(string.find('world'))  # -1\n\nprint(string.rfind('your'))  # 34\n\nprint(string.rfind('world'))  # -1\n  ".trim(),this.stringLowerExampleCode="\nstring = 'String Lower Example'\n\nprint(string.lower())  # string lower example\n  ".trim(),this.stringUpperExampleCode="\nstring = 'string upper example'\n\nprint(string.upper())  # STRING UPPER EXAMPLE\n  ".trim(),this.stringIsLowerExampleCode="\nstring = 'String'\n\nprint(string.islower())  # False\n\nstring = 'string'\n\nprint(string.islower())  # True\n    ".trim(),this.stringIsUpperExampleCode="\nstring = 'Hello World'\n\nprint(string.isupper())  # False\n\nstring = 'HELLO WORLD'\n\nprint(string.isupper())  # True\n    ".trim(),this.stringTitleExampleCode="\nstring = 'string title example'\n\nprint(string.title())  # String Title Example\n  ".trim(),this.stringIsTitleExampleCode="\nstring = 'Hello World'\n\nprint(string.istitle())  # True\n\nstring = 'Hello world!'\n\nprint(string.istitle())  # False\n      ".trim(),this.stringFormatExampleCode="\nstring = 'String {0} Example {1}'\n\nprint(string.format('Format', 'Tutorial'))  # String Format Example Tutorial\n  ".trim(),this.stringFormatTwoExampleCode="\nstring = 'String {1} Example {0}'\n\nprint(string.format('Format', 'Tutorial'))  # String Tutorial Example Format\n  ".trim(),this.stringReplaceExampleCode="\nstring = 'String Replace Example'\n\nprint(string.replace('Replace', 'New Replace'))  # String New Replace Example\n  ".trim(),this.stringEncodeDecodeExampleCode="\nstring = 'String Encode and Decode Example'\n\nencoded_str = string.encode('ascii')\n\nprint(encoded_str)  # b'String Encode and Decode Example'\n\ndecoded_str = encoded_str.decode('ascii')\n\nprint(decoded_str)  # String Encode and Decode Example\n  ".trim(),this.stringStartsEndsWithExampleCode="\nstring = 'String Startswith and Endswith Example'\n\nprint(string.startswith('String'))  # True\n\nprint(string.endswith('String'))  # False\n  ".trim(),this.stringIsAlNumExampleCode="\nstring = 'String123ABC'\n\nprint(string.isalnum())  # True\n\nstring = 'String123ABC@123'\n\nprint(string.isalnum())  # False\n  ".trim(),this.stringIsAlphaExampleCode="\nstring = 'String Example'\n\nprint(string.isalpha())  # False\n\nstring = 'String'\n\nprint(string.isalpha())  # True\n  ".trim(),this.stringIsAsciiExampleCode="\nstring = 'String Example'\n\nprint(string.isascii())  # True\n\nstring = '\u092d\u093e\u0930\u0924'\n\nprint(string.isascii())  # False\n  ".trim(),this.stringIsDecimalExampleCode="\nstring = '3.14'\n\nprint(string.isdecimal())  # False\n\nstring = '50'\n\nprint(string.isdecimal())  # True\n  ".trim(),this.stringIsDigitExampleCode="\nstring = '3.14'\n\nprint(string.isdigit())  # False\n\nstring = '50'\n\nprint(string.isdigit())  # True\n    ".trim(),this.stringIsIdentifierExampleCode="\nstring = '_data'\n\nprint(string.isidentifier())  # True\n\nstring = '@object'\n\nprint(string.isidentifier())  # False\n    ".trim(),this.stringIsNumericExampleCode="\nstring = '1234+Data'\n\nprint(string.isnumeric())  # False\n\nstring = '12345'\n\nprint(string.isnumeric())  # True\n    ".trim(),this.stringIsSpaceExampleCode="\nstring = '# '\n\nprint(string.isspace())  # False\n\nstring = ' '\n\nprint(string.isspace())  # True\n    ".trim(),this.stringLjustRjustExampleCode="\nstring = 'Hello World'\n\nprint(string.ljust(20, '*'))  # Hello World*********\n\nprint(string.rjust(20, '*'))  # *********Hello World\n    ".trim(),this.stringSwapcaseExampleCode="\nstring = 'Hello World'\n\nprint(string.swapcase())  # hELLO wORLD\n    ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-strings"]],decls:756,vars:70,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],["role","alert",1,"alert","alert-warning"],[3,"languages","highlight"],[1,"h5"],["role","alert",1,"alert","alert-success"],["role","alert",1,"alert","alert-danger"]],template:function(e,t){if(1&e){r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Strings in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," Python string is the collection of the characters surrounded by single quotes, double quotes, or triple quotes. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," The computer does not understand the characters; internally, it stores manipulated character as the combination of the 0's and 1's. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," In short, String is a collection of one or more characters. Python strings are also called the collection of Unicode characters. "),r.Ib(),r.Jb(14,"div",7),r.Jb(15,"p",6),r.Jb(16,"strong"),r.dc(17,"Note:"),r.Ib(),r.Jb(18,"i"),r.Jb(19,"strong"),r.dc(20,"'"),r.Ib(),r.dc(21,"Hello World"),r.Jb(22,"strong"),r.dc(23,"'"),r.Ib(),r.Ib(),r.dc(24," and "),r.Jb(25,"i"),r.Jb(26,"strong"),r.dc(27,'"'),r.Ib(),r.dc(28,"Hello World"),r.Jb(29,"strong"),r.dc(30,'"'),r.Ib(),r.Ib(),r.dc(31," both are the same. "),r.Ib(),r.Ib(),r.Jb(32,"div",6),r.Jb(33,"p"),r.Jb(34,"strong"),r.dc(35,"Example: Creating Strings in Python"),r.Ib(),r.Ib(),r.Hb(36,"hr"),r.Jb(37,"pre"),r.Hb(38,"code",8),r.Ib(),r.Ib(),r.Jb(39,"div",6),r.Jb(40,"p"),r.Jb(41,"strong"),r.dc(42,"Multiline Strings"),r.Ib(),r.Ib(),r.Hb(43,"hr"),r.Jb(44,"p"),r.dc(45," You can assign a multiline string to a variable by using "),r.Jb(46,"strong"),r.dc(47,'three double quotes (""")'),r.Ib(),r.dc(48," or "),r.Jb(49,"strong"),r.dc(50,"three single quotes (''')"),r.Ib(),r.dc(51,". "),r.Ib(),r.Jb(52,"p"),r.Jb(53,"strong"),r.dc(54,"Example: Multiline Strings"),r.Ib(),r.Ib(),r.Hb(55,"hr"),r.Jb(56,"pre"),r.Hb(57,"code",8),r.Ib(),r.Ib(),r.Jb(58,"div",6),r.Jb(59,"p",9),r.dc(60,"String Indexing"),r.Ib(),r.Hb(61,"hr"),r.Jb(62,"p"),r.dc(63," Python does not have a character data type, a single character is simply a string with a length of 1. "),r.Ib(),r.Jb(64,"p"),r.dc(65," Square brackets can be used to access elements of the string. "),r.Ib(),r.Jb(66,"div",10),r.Jb(67,"p",6),r.Jb(68,"strong"),r.dc(69,"Note:"),r.Ib(),r.dc(70," The string index starts from 0 and ends with size - 1. "),r.Ib(),r.Ib(),r.Jb(71,"p"),r.Jb(72,"strong"),r.dc(73,"Example: String Indexing"),r.Ib(),r.Ib(),r.Hb(74,"hr"),r.Jb(75,"pre"),r.Hb(76,"code",8),r.Ib(),r.Ib(),r.Jb(77,"div",6),r.Jb(78,"p",9),r.dc(79,"String Slicing"),r.Ib(),r.Hb(80,"hr"),r.Jb(81,"p"),r.dc(82," Specify the start index and the end index, separated by a colon, to return a part of the string or substring. "),r.Ib(),r.Jb(83,"p"),r.Jb(84,"code"),r.Jb(85,"strong"),r.dc(86,"Method Signature:"),r.Ib(),r.dc(87," string[start_index:end_index(optional):steps(optional)]"),r.Ib(),r.Ib(),r.Jb(88,"p"),r.Jb(89,"strong"),r.dc(90,"Example: String Slicing"),r.Ib(),r.Ib(),r.Hb(91,"hr"),r.Jb(92,"pre"),r.Hb(93,"code",8),r.Ib(),r.Ib(),r.Jb(94,"div",6),r.Jb(95,"p",9),r.dc(96,"String Negative Indexing"),r.Ib(),r.Hb(97,"hr"),r.Jb(98,"p"),r.dc(99," Python also supports negative indexing in the string, sequence, set, etc. "),r.Ib(),r.Jb(100,"p"),r.dc(101," Use negative indexes to start the slice from the end of the string. "),r.Ib(),r.Jb(102,"p"),r.Jb(103,"strong"),r.dc(104,"Example: String Slicing"),r.Ib(),r.Ib(),r.Hb(105,"hr"),r.Jb(106,"pre"),r.Hb(107,"code",8),r.Ib(),r.Ib(),r.Jb(108,"div",6),r.Jb(109,"p",9),r.dc(110,"String Length and Concatenation"),r.Ib(),r.Hb(111,"hr"),r.Jb(112,"p"),r.dc(113," To get the length of a string, use the "),r.Jb(114,"strong"),r.dc(115,"len()"),r.Ib(),r.dc(116," function. "),r.Ib(),r.Jb(117,"p"),r.dc(118," To concatenate, or combine, two strings you can use the "),r.Jb(119,"strong"),r.dc(120,"+"),r.Ib(),r.dc(121," operator. "),r.Ib(),r.Jb(122,"p"),r.Jb(123,"strong"),r.dc(124,"Example: String Length and Concatenation"),r.Ib(),r.Ib(),r.Hb(125,"hr"),r.Jb(126,"pre"),r.Hb(127,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(128,"div",1),r.Jb(129,"div",2),r.Jb(130,"div",3),r.Jb(131,"div",4),r.Jb(132,"h5",5),r.dc(133,"String Class Methods"),r.Ib(),r.Hb(134,"hr"),r.Jb(135,"p"),r.dc(136," Python has a set of built-in methods that you can use on strings. "),r.Ib(),r.Jb(137,"div",6),r.Jb(138,"p",9),r.dc(139,"capitalize()"),r.Ib(),r.Hb(140,"hr"),r.Jb(141,"p"),r.Jb(142,"code"),r.Jb(143,"strong"),r.dc(144,"Method Signature:"),r.Ib(),r.dc(145," def capitalize(self) -> str"),r.Ib(),r.Ib(),r.Jb(146,"p"),r.dc(147," Return a capitalized version of the string. More specifically, make the first character have upper case and the rest lower case. "),r.Ib(),r.Jb(148,"p"),r.Jb(149,"strong"),r.dc(150,"Example: String capitalize()"),r.Ib(),r.Ib(),r.Hb(151,"hr"),r.Jb(152,"pre"),r.Hb(153,"code",8),r.Ib(),r.Ib(),r.Jb(154,"div",6),r.Jb(155,"p",9),r.dc(156,"casefold()"),r.Ib(),r.Hb(157,"hr"),r.Jb(158,"p"),r.Jb(159,"code"),r.Jb(160,"strong"),r.dc(161,"Method Signature:"),r.Ib(),r.dc(162," def casefold(self) -> str"),r.Ib(),r.Ib(),r.Jb(163,"p"),r.dc(164," Return a version of the string suitable for caseless comparisons. "),r.Ib(),r.Jb(165,"p"),r.Jb(166,"strong"),r.dc(167,"Example: String casefold()"),r.Ib(),r.Ib(),r.Hb(168,"hr"),r.Jb(169,"pre"),r.Hb(170,"code",8),r.Ib(),r.Ib(),r.Jb(171,"div",6),r.Jb(172,"p",9),r.dc(173,"count()"),r.Ib(),r.Hb(174,"hr"),r.Jb(175,"p"),r.Jb(176,"code"),r.Jb(177,"strong"),r.dc(178,"Method Signature:"),r.Ib(),r.dc(179," def count(self, x: str, start: Optional[int], end: Optional[int]) -> int"),r.Ib(),r.Ib(),r.Jb(180,"p"),r.dc(181," Return the number of non-overlapping occurrences of substring sub in string String[start:end]. "),r.Ib(),r.Jb(182,"p"),r.dc(183," Optional arguments start and end are interpreted as in slice notation. "),r.Ib(),r.Jb(184,"p"),r.Jb(185,"strong"),r.dc(186,"Example: String count()"),r.Ib(),r.Ib(),r.Hb(187,"hr"),r.Jb(188,"pre"),r.Hb(189,"code",8),r.Ib(),r.Ib(),r.Jb(190,"div",6),r.Jb(191,"p",9),r.dc(192,"lstrip(), rstrip() and strip()"),r.Ib(),r.Hb(193,"hr"),r.Jb(194,"p"),r.Jb(195,"code"),r.Jb(196,"strong"),r.dc(197,"Method Signature:"),r.Ib(),r.dc(198," def lstrip(self, chars: Optional[str]) -> str"),r.Ib(),r.Ib(),r.Jb(199,"p"),r.dc(200," Return a copy of the string with leading whitespace removed. "),r.Ib(),r.Jb(201,"p"),r.Jb(202,"code"),r.Jb(203,"strong"),r.dc(204,"Method Signature:"),r.Ib(),r.dc(205," def rstrip(self, chars: Optional[str]) -> str"),r.Ib(),r.Ib(),r.Jb(206,"p"),r.dc(207," Return a copy of the string with trailing whitespace removed. "),r.Ib(),r.Jb(208,"p"),r.Jb(209,"code"),r.Jb(210,"strong"),r.dc(211,"Method Signature:"),r.Ib(),r.dc(212," def strip(self, chars: Optional[str]) -> str"),r.Ib(),r.Ib(),r.Jb(213,"p"),r.dc(214," Return a copy of the string with leading and trailing whitespace removed. "),r.Ib(),r.Jb(215,"p"),r.dc(216," If chars is given and not None, remove characters in chars instead. "),r.Ib(),r.Jb(217,"p"),r.Jb(218,"strong"),r.dc(219,"Example: String lstrip(), rstrip() and strip()"),r.Ib(),r.Ib(),r.Hb(220,"hr"),r.Jb(221,"pre"),r.Hb(222,"code",8),r.Ib(),r.Ib(),r.Jb(223,"div",6),r.Jb(224,"p",9),r.dc(225,"join()"),r.Ib(),r.Hb(226,"hr"),r.Jb(227,"p"),r.Jb(228,"code"),r.Jb(229,"strong"),r.dc(230,"Method Signature:"),r.Ib(),r.dc(231," def join(self, iterable: Iterable[str]) -> str"),r.Ib(),r.Ib(),r.Jb(232,"p"),r.dc(233," Concatenate any number of strings. The string whose method is called is inserted in between each given string. The result is returned as a new string. "),r.Ib(),r.Jb(234,"p"),r.Jb(235,"strong"),r.dc(236,"Example: String join()"),r.Ib(),r.Ib(),r.Hb(237,"hr"),r.Jb(238,"pre"),r.Hb(239,"code",8),r.Ib(),r.Ib(),r.Jb(240,"div",6),r.Jb(241,"p",9),r.dc(242,"split() and rsplit()"),r.Ib(),r.Hb(243,"hr"),r.Jb(244,"p"),r.Jb(245,"code"),r.Jb(246,"strong"),r.dc(247,"Method Signature:"),r.Ib(),r.dc(248," def split(self, sep: Optional[str], maxsplit: int) -> List[str]"),r.Ib(),r.Ib(),r.Jb(249,"p"),r.dc(250," Return a list of the words in the string, using sep as the delimiter string. "),r.Ib(),r.Jb(251,"p"),r.Jb(252,"code"),r.Jb(253,"strong"),r.dc(254,"Method Signature:"),r.Ib(),r.dc(255," def split(self, sep: Optional[str], maxsplit: int) -> List[str]"),r.Ib(),r.Ib(),r.Jb(256,"p"),r.dc(257," Return a list of the words in the string, using sep as the delimiter string. "),r.Ib(),r.Jb(258,"p"),r.Jb(259,"strong"),r.dc(260,"sep:"),r.Ib(),r.dc(261," The delimiter according which to split the string. None (the default value) means split according to any whitespace, and discard empty strings from the result. "),r.Ib(),r.Jb(262,"p"),r.Jb(263,"strong"),r.dc(264,"maxsplit:"),r.Ib(),r.dc(265," Maximum number of splits to do. -1 (the default value) means no limit. "),r.Ib(),r.Jb(266,"p"),r.Jb(267,"strong"),r.dc(268,"Example: String split() and rsplit()"),r.Ib(),r.Ib(),r.Hb(269,"hr"),r.Jb(270,"pre"),r.Hb(271,"code",8),r.Ib(),r.Ib(),r.Jb(272,"div",6),r.Jb(273,"p",9),r.dc(274,"index() and rindex()"),r.Ib(),r.Hb(275,"hr"),r.Jb(276,"p"),r.Jb(277,"code"),r.Jb(278,"strong"),r.dc(279,"Method Signature:"),r.Ib(),r.dc(280," def index(self, sub: str, start: Optional[int], end: Optional[int]) -> int"),r.Ib(),r.Ib(),r.Jb(281,"p"),r.dc(282," Return the lowest index in String where substring sub is found, such that sub is contained within String[start:end]. "),r.Ib(),r.Jb(283,"p"),r.Jb(284,"code"),r.Jb(285,"strong"),r.dc(286,"Method Signature:"),r.Ib(),r.dc(287," def rindex(self, sub: str, start: Optional[int], end: Optional[int]) -> int"),r.Ib(),r.Ib(),r.Jb(288,"p"),r.dc(289," Return the highest index in String where substring sub is found, such that sub is contained within String[start:end]. "),r.Ib(),r.Jb(290,"p"),r.dc(291," Optional arguments start and end are interpreted as in slice notation. "),r.Ib(),r.Jb(292,"div",11),r.Jb(293,"p",6),r.Jb(294,"strong"),r.dc(295,"Note:"),r.Ib(),r.dc(296," Raises ValueError when the substring is not found. "),r.Ib(),r.Ib(),r.Jb(297,"p"),r.Jb(298,"strong"),r.dc(299,"Example: String index() and rindex()"),r.Ib(),r.Ib(),r.Hb(300,"hr"),r.Jb(301,"pre"),r.Hb(302,"code",8),r.Ib(),r.Ib(),r.Jb(303,"div",6),r.Jb(304,"p",9),r.dc(305,"find() and rfind()"),r.Ib(),r.Hb(306,"hr"),r.Jb(307,"p"),r.Jb(308,"code"),r.Jb(309,"strong"),r.dc(310,"Method Signature:"),r.Ib(),r.dc(311," def find(self, sub: str, start: Optional[int], end: Optional[int]) -> int"),r.Ib(),r.Ib(),r.Jb(312,"p"),r.dc(313," Return the lowest index in String where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation. "),r.Ib(),r.Jb(314,"p"),r.Jb(315,"code"),r.Jb(316,"strong"),r.dc(317,"Method Signature:"),r.Ib(),r.dc(318," def rfind(self, sub: str, start: Optional[int], end: Optional[int]) -> int"),r.Ib(),r.Ib(),r.Jb(319,"p"),r.dc(320," Return the highest index in String where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation "),r.Ib(),r.Jb(321,"div",10),r.Jb(322,"p",6),r.Jb(323,"strong"),r.dc(324,"Note:"),r.Ib(),r.dc(325," Return -1 on failure. "),r.Ib(),r.Ib(),r.Jb(326,"p"),r.Jb(327,"strong"),r.dc(328,"Example: String find() and rfind()"),r.Ib(),r.Ib(),r.Hb(329,"hr"),r.Jb(330,"pre"),r.Hb(331,"code",8),r.Ib(),r.Ib(),r.Jb(332,"div",6),r.Jb(333,"p",9),r.dc(334,"lower()"),r.Ib(),r.Hb(335,"hr"),r.Jb(336,"p"),r.Jb(337,"code"),r.Jb(338,"strong"),r.dc(339,"Method Signature:"),r.Ib(),r.dc(340," def lower(self) -> str"),r.Ib(),r.Ib(),r.Jb(341,"p"),r.dc(342," Return a copy of the string converted to lowercase. "),r.Ib(),r.Jb(343,"p"),r.Jb(344,"strong"),r.dc(345,"Example: String lower()"),r.Ib(),r.Ib(),r.Hb(346,"hr"),r.Jb(347,"pre"),r.Hb(348,"code",8),r.Ib(),r.Ib(),r.Jb(349,"div",6),r.Jb(350,"p",9),r.dc(351,"upper()"),r.Ib(),r.Hb(352,"hr"),r.Jb(353,"p"),r.Jb(354,"code"),r.Jb(355,"strong"),r.dc(356,"Method Signature:"),r.Ib(),r.dc(357," def upper(self) -> str"),r.Ib(),r.Ib(),r.Jb(358,"p"),r.dc(359," Return a copy of the string converted to upper. "),r.Ib(),r.Jb(360,"p"),r.Jb(361,"strong"),r.dc(362,"Example: String upper()"),r.Ib(),r.Ib(),r.Hb(363,"hr"),r.Jb(364,"pre"),r.Hb(365,"code",8),r.Ib(),r.Ib(),r.Jb(366,"div",6),r.Jb(367,"p",9),r.dc(368,"islower()"),r.Ib(),r.Hb(369,"hr"),r.Jb(370,"p"),r.Jb(371,"code"),r.Jb(372,"strong"),r.dc(373,"Method Signature:"),r.Ib(),r.dc(374," def islower(self) -> bool"),r.Ib(),r.Ib(),r.Jb(375,"p"),r.dc(376," Return True if the string is a lowercase string, False otherwise. "),r.Ib(),r.Jb(377,"p"),r.dc(378," A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string. "),r.Ib(),r.Jb(379,"p"),r.Jb(380,"strong"),r.dc(381,"Example: String islower()"),r.Ib(),r.Ib(),r.Hb(382,"hr"),r.Jb(383,"pre"),r.Hb(384,"code",8),r.Ib(),r.Ib(),r.Jb(385,"div",6),r.Jb(386,"p",9),r.dc(387,"isupper()"),r.Ib(),r.Hb(388,"hr"),r.Jb(389,"p"),r.Jb(390,"code"),r.Jb(391,"strong"),r.dc(392,"Method Signature:"),r.Ib(),r.dc(393," def isupper(self) -> bool"),r.Ib(),r.Ib(),r.Jb(394,"p"),r.dc(395," Return True if the string is an uppercase string, False otherwise. "),r.Ib(),r.Jb(396,"p"),r.dc(397," A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string. "),r.Ib(),r.Jb(398,"p"),r.Jb(399,"strong"),r.dc(400,"Example: String isupper()"),r.Ib(),r.Ib(),r.Hb(401,"hr"),r.Jb(402,"pre"),r.Hb(403,"code",8),r.Ib(),r.Ib(),r.Jb(404,"div",6),r.Jb(405,"p",9),r.dc(406,"title()"),r.Ib(),r.Hb(407,"hr"),r.Jb(408,"p"),r.Jb(409,"code"),r.Jb(410,"strong"),r.dc(411,"Method Signature:"),r.Ib(),r.dc(412," def title(self) -> str"),r.Ib(),r.Ib(),r.Jb(413,"p"),r.dc(414," Return a version of the string where each word is titlecased. "),r.Ib(),r.Jb(415,"p"),r.Jb(416,"strong"),r.dc(417,"Example: String title()"),r.Ib(),r.Ib(),r.Hb(418,"hr"),r.Jb(419,"pre"),r.Hb(420,"code",8),r.Ib(),r.Ib(),r.Jb(421,"div",6),r.Jb(422,"p",9),r.dc(423,"istitle()"),r.Ib(),r.Hb(424,"hr"),r.Jb(425,"p"),r.Jb(426,"code"),r.Jb(427,"strong"),r.dc(428,"Method Signature:"),r.Ib(),r.dc(429," def istitle(self) -> bool"),r.Ib(),r.Ib(),r.Jb(430,"p"),r.dc(431," Return True if the string is a title-cased string, False otherwise. "),r.Ib(),r.Jb(432,"p"),r.dc(433," In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones "),r.Ib(),r.Jb(434,"p"),r.Jb(435,"strong"),r.dc(436,"Example: String istitle()"),r.Ib(),r.Ib(),r.Hb(437,"hr"),r.Jb(438,"pre"),r.Hb(439,"code",8),r.Ib(),r.Ib(),r.Jb(440,"div",6),r.Jb(441,"p",9),r.dc(442,"format()"),r.Ib(),r.Hb(443,"hr"),r.Jb(444,"p"),r.Jb(445,"code"),r.Jb(446,"strong"),r.dc(447,"Method Signature:"),r.Ib(),r.dc(448," def format(self, *args: object, **kwargs: object) -> str"),r.Ib(),r.Ib(),r.Jb(449,"p"),r.dc(450," Return a formatted version of String, using substitutions from args and kwargs. The substitutions are identified by braces { }. "),r.Ib(),r.Jb(451,"p"),r.Jb(452,"strong"),r.dc(453,"Example: String format()"),r.Ib(),r.Ib(),r.Hb(454,"hr"),r.Jb(455,"pre"),r.Hb(456,"code",8),r.Ib(),r.Jb(457,"p"),r.dc(458," We get different outputs if we change the substitution order. "),r.Ib(),r.Jb(459,"pre"),r.Hb(460,"code",8),r.Ib(),r.Ib(),r.Jb(461,"div",6),r.Jb(462,"p",9),r.dc(463,"replace()"),r.Ib(),r.Hb(464,"hr"),r.Jb(465,"p"),r.Jb(466,"code"),r.Jb(467,"strong"),r.dc(468,"Method Signature:"),r.Ib(),r.dc(469," def replace(self, old: str, new: str, count: int) -> str"),r.Ib(),r.Ib(),r.Jb(470,"p"),r.dc(471," Return a copy with all occurrences of substring old replaced by new. "),r.Ib(),r.Jb(472,"p"),r.Jb(473,"strong"),r.dc(474,"count:"),r.Ib(),r.dc(475," Maximum number of occurrences to replace. -1 (the default value) means replace all occurrences. "),r.Ib(),r.Jb(476,"p"),r.Jb(477,"strong"),r.dc(478,"Example: String replace()"),r.Ib(),r.Ib(),r.Hb(479,"hr"),r.Jb(480,"pre"),r.Hb(481,"code",8),r.Ib(),r.Ib(),r.Jb(482,"div",6),r.Jb(483,"p",9),r.dc(484,"encode() and decode()"),r.Ib(),r.Hb(485,"hr"),r.Jb(486,"p"),r.Jb(487,"code"),r.Jb(488,"strong"),r.dc(489,"Method Signature: encode():"),r.Ib(),r.dc(490," def encode(self, encoding: str, errors: str) -> bytes"),r.Ib(),r.Ib(),r.Jb(491,"p"),r.Jb(492,"strong"),r.dc(493,"encode():"),r.Ib(),r.dc(494," Encode the string using the codec registered for encoding. "),r.Ib(),r.Jb(495,"p"),r.Jb(496,"code"),r.Jb(497,"strong"),r.dc(498,"Method Signature: decode():"),r.Ib(),r.dc(499," def encode(self, encoding: str, errors: str) -> str"),r.Ib(),r.Ib(),r.Jb(500,"p"),r.Jb(501,"strong"),r.dc(502,"decode():"),r.Ib(),r.dc(503," Decode the bytes using the codec registered for encoding. "),r.Ib(),r.Jb(504,"p"),r.Jb(505,"strong"),r.dc(506,"encoding:"),r.Ib(),r.dc(507," The encoding with which to decode the bytes. "),r.Ib(),r.Jb(508,"p"),r.Jb(509,"strong"),r.dc(510,"errors:"),r.Ib(),r.dc(511," The error handling scheme to use for the handling of decoding errors. The default is 'strict' meaning that decoding errors raise a UnicodeDecodeError. Other possible values are 'ignore' and 'replace' as well as any other name registered with codecs.register_error that can handle UnicodeDecodeErrors "),r.Ib(),r.Jb(512,"p"),r.Jb(513,"strong"),r.dc(514,"Example: String encode() and decode()"),r.Ib(),r.Ib(),r.Hb(515,"hr"),r.Jb(516,"pre"),r.Hb(517,"code",8),r.Ib(),r.Ib(),r.Jb(518,"div",6),r.Jb(519,"p",9),r.dc(520,"startswith() and endswith()"),r.Ib(),r.Hb(521,"hr"),r.Jb(522,"p"),r.Jb(523,"code"),r.Jb(524,"strong"),r.dc(525,"Signature: startswith():"),r.Ib(),r.dc(526," def startswith(self, prefix: Union[str, Tuple[str, ...]], start: Optional[int], end: Optional[int]) -> bool"),r.Ib();r.Ib(),r.Jb(527,"p"),r.Jb(528,"strong"),r.dc(529,"startswith():"),r.Ib(),r.dc(530," Return True if String starts with the specified prefix, False otherwise. Prefix can also be a tuple of strings to try. "),r.Ib(),r.Jb(531,"p"),r.Jb(532,"code"),r.Jb(533,"strong"),r.dc(534,"Signature: endswith():"),r.Ib(),r.dc(535," def startswith(self, suffix: Union[str, Tuple[str, ...]], start: Optional[int], end: Optional[int]) -> bool"),r.Ib(),r.Ib(),r.Jb(536,"p"),r.Jb(537,"strong"),r.dc(538,"endswith():"),r.Ib(),r.dc(539," Return True if String ends with the specified suffix, False otherwise. Suffix can also be a tuple of strings to try. "),r.Ib(),r.Jb(540,"p"),r.Jb(541,"strong"),r.dc(542,"start:"),r.Ib(),r.dc(543," With optional start, test String beginning at that position. "),r.Ib(),r.Jb(544,"p"),r.Jb(545,"strong"),r.dc(546,"end:"),r.Ib(),r.dc(547," With optional end, stop comparing String at that position. "),r.Ib(),r.Jb(548,"p"),r.Jb(549,"strong"),r.dc(550,"Example: String startswith() and endswith()"),r.Ib(),r.Ib(),r.Hb(551,"hr"),r.Jb(552,"pre"),r.Hb(553,"code",8),r.Ib(),r.Ib(),r.Jb(554,"div",6),r.Jb(555,"p",9),r.dc(556,"isalnum()"),r.Ib(),r.Hb(557,"hr"),r.Jb(558,"p"),r.Jb(559,"code"),r.Jb(560,"strong"),r.dc(561,"Method Signature:"),r.Ib(),r.dc(562," def isalnum(self) -> bool"),r.Ib(),r.Ib(),r.Jb(563,"p"),r.dc(564," Return True if the string is an alpha-numeric string, False otherwise. "),r.Ib(),r.Jb(565,"p"),r.dc(566," A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string "),r.Ib(),r.Jb(567,"p"),r.Jb(568,"strong"),r.dc(569,"Example: String isalnum()"),r.Ib(),r.Ib(),r.Hb(570,"hr"),r.Jb(571,"pre"),r.Hb(572,"code",8),r.Ib(),r.Ib(),r.Jb(573,"div",6),r.Jb(574,"p",9),r.dc(575,"isalpha()"),r.Ib(),r.Hb(576,"hr"),r.Jb(577,"p"),r.Jb(578,"code"),r.Jb(579,"strong"),r.dc(580,"Method Signature:"),r.Ib(),r.dc(581," def isalpha(self) -> bool"),r.Ib(),r.Ib(),r.Jb(582,"p"),r.dc(583," Return True if the string is an alphabetic string, False otherwise. "),r.Ib(),r.Jb(584,"p"),r.dc(585," A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string. "),r.Ib(),r.Jb(586,"p"),r.Jb(587,"strong"),r.dc(588,"Example: String isalpha()"),r.Ib(),r.Ib(),r.Hb(589,"hr"),r.Jb(590,"pre"),r.Hb(591,"code",8),r.Ib(),r.Ib(),r.Jb(592,"div",6),r.Jb(593,"p",9),r.dc(594,"isascii()"),r.Ib(),r.Hb(595,"hr"),r.Jb(596,"p"),r.Jb(597,"code"),r.Jb(598,"strong"),r.dc(599,"Method Signature:"),r.Ib(),r.dc(600," def isascii(self) -> bool"),r.Ib(),r.Ib(),r.Jb(601,"p"),r.dc(602," Return True if all characters in the string are ASCII, False otherwise. "),r.Ib(),r.Jb(603,"p"),r.dc(604," ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too. "),r.Ib(),r.Jb(605,"p"),r.Jb(606,"strong"),r.dc(607,"Example: String isascii()"),r.Ib(),r.Ib(),r.Hb(608,"hr"),r.Jb(609,"pre"),r.Hb(610,"code",8),r.Ib(),r.Ib(),r.Jb(611,"div",6),r.Jb(612,"p",9),r.dc(613,"isdecimal()"),r.Ib(),r.Hb(614,"hr"),r.Jb(615,"p"),r.Jb(616,"code"),r.Jb(617,"strong"),r.dc(618,"Method Signature:"),r.Ib(),r.dc(619," def isdecimal(self) -> bool"),r.Ib(),r.Ib(),r.Jb(620,"p"),r.dc(621," Return True if the string is a decimal string, False otherwise. "),r.Ib(),r.Jb(622,"p"),r.dc(623," A string is a decimal string if all characters in the string are decimal and there is at least one character in the string. "),r.Ib(),r.Jb(624,"p"),r.Jb(625,"strong"),r.dc(626,"Example: String isdecimal()"),r.Ib(),r.Ib(),r.Hb(627,"hr"),r.Jb(628,"pre"),r.Hb(629,"code",8),r.Ib(),r.Ib(),r.Jb(630,"div",6),r.Jb(631,"p",9),r.dc(632,"isdigit()"),r.Ib(),r.Hb(633,"hr"),r.Jb(634,"p"),r.Jb(635,"code"),r.Jb(636,"strong"),r.dc(637,"Method Signature:"),r.Ib(),r.dc(638," def isdigit(self) -> bool"),r.Ib(),r.Ib(),r.Jb(639,"p"),r.dc(640," Return True if the string is a digit string, False otherwise. "),r.Ib(),r.Jb(641,"p"),r.dc(642," A string is a digit string if all characters in the string are digits and there is at least one character in the string "),r.Ib(),r.Jb(643,"p"),r.Jb(644,"strong"),r.dc(645,"Example: String isdigit()"),r.Ib(),r.Ib(),r.Hb(646,"hr"),r.Jb(647,"pre"),r.Hb(648,"code",8),r.Ib(),r.Ib(),r.Jb(649,"div",6),r.Jb(650,"p",9),r.dc(651,"isidentifier()"),r.Ib(),r.Hb(652,"hr"),r.Jb(653,"p"),r.Jb(654,"code"),r.Jb(655,"strong"),r.dc(656,"Method Signature:"),r.Ib(),r.dc(657," def isidentifier(self) -> bool"),r.Ib(),r.Ib(),r.Jb(658,"p"),r.dc(659," Return True if the string is a valid Python identifier, False otherwise. "),r.Ib(),r.Jb(660,"p"),r.Jb(661,"strong"),r.dc(662,"Example: String isidentifier()"),r.Ib(),r.Ib(),r.Hb(663,"hr"),r.Jb(664,"pre"),r.Hb(665,"code",8),r.Ib(),r.Jb(666,"div",10),r.Jb(667,"p",6),r.Jb(668,"strong"),r.dc(669,"Note:"),r.Ib(),r.dc(670,' Use keyword.iskeyword() to test for reserved identifiers such as "def" and "class". '),r.Ib(),r.Ib(),r.Ib(),r.Jb(671,"div",6),r.Jb(672,"p",9),r.dc(673,"isnumeric()"),r.Ib(),r.Hb(674,"hr"),r.Jb(675,"p"),r.Jb(676,"code"),r.Jb(677,"strong"),r.dc(678,"Method Signature:"),r.Ib(),r.dc(679," def isnumeric(self) -> bool"),r.Ib(),r.Ib(),r.Jb(680,"p"),r.dc(681," Return True if the string is a numeric string, False otherwise. "),r.Ib(),r.Jb(682,"p"),r.dc(683," A string is numeric if all characters in the string are numeric and there is at least one character in the string. "),r.Ib(),r.Jb(684,"p"),r.Jb(685,"strong"),r.dc(686,"Example: String isnumeric()"),r.Ib(),r.Ib(),r.Hb(687,"hr"),r.Jb(688,"pre"),r.Hb(689,"code",8),r.Ib(),r.Ib(),r.Jb(690,"div",6),r.Jb(691,"p",9),r.dc(692,"isspace()"),r.Ib(),r.Hb(693,"hr"),r.Jb(694,"p"),r.Jb(695,"code"),r.Jb(696,"strong"),r.dc(697,"Method Signature:"),r.Ib(),r.dc(698," def isspace(self) -> bool"),r.Ib(),r.Ib(),r.Jb(699,"p"),r.dc(700," Return True if the string is a whitespace string, False otherwise. "),r.Ib(),r.Jb(701,"p"),r.dc(702," A string is whitespace if all characters in the string are whitespace and there is at least one character in the string. "),r.Ib(),r.Jb(703,"p"),r.Jb(704,"strong"),r.dc(705,"Example: String isspace()"),r.Ib(),r.Ib(),r.Hb(706,"hr"),r.Jb(707,"pre"),r.Hb(708,"code",8),r.Ib(),r.Ib(),r.Jb(709,"div",6),r.Jb(710,"p",9),r.dc(711,"ljust() and rjust()"),r.Ib(),r.Hb(712,"hr"),r.Jb(713,"p"),r.Jb(714,"code"),r.Jb(715,"strong"),r.dc(716,"Method Signature: ljust():"),r.Ib(),r.dc(717," def ljust(self, width: int, fillchar: str) -> str"),r.Ib(),r.Ib(),r.Jb(718,"p"),r.Jb(719,"strong"),r.dc(720,"ljust():"),r.Ib(),r.dc(721," Return a left-justified string of length width "),r.Ib(),r.Jb(722,"p"),r.Jb(723,"code"),r.Jb(724,"strong"),r.dc(725,"Method Signature: rjust():"),r.Ib(),r.dc(726," def rjust(self, width: int, fillchar: str) -> str"),r.Ib(),r.Ib(),r.Jb(727,"p"),r.Jb(728,"strong"),r.dc(729,"rjust():"),r.Ib(),r.dc(730," Return a right-justified string of length width. "),r.Ib(),r.Jb(731,"p"),r.dc(732," Padding is done using the specified fill character (default is a space). "),r.Ib(),r.Jb(733,"p"),r.Jb(734,"strong"),r.dc(735,"Example: String ljust() and rjust()"),r.Ib(),r.Ib(),r.Hb(736,"hr"),r.Jb(737,"pre"),r.Hb(738,"code",8),r.Ib(),r.Ib(),r.Jb(739,"div",6),r.Jb(740,"p",9),r.dc(741,"swapcase()"),r.Ib(),r.Hb(742,"hr"),r.Jb(743,"p"),r.Jb(744,"code"),r.Jb(745,"strong"),r.dc(746,"Method Signature:"),r.Ib(),r.dc(747," def swapcase(self) -> str"),r.Ib(),r.Ib(),r.Jb(748,"p"),r.dc(749," Convert uppercase characters to lowercase and lowercase characters to uppercase. "),r.Ib(),r.Jb(750,"p"),r.Jb(751,"strong"),r.dc(752,"Example: String swapcase()"),r.Ib(),r.Ib(),r.Hb(753,"hr"),r.Jb(754,"pre"),r.Hb(755,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()}2&e&&(r.wb(38),r.Ub("languages",t.languages)("highlight",t.howToCreateStringExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.multiLineStringExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIndexingExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringSlicingExampleCode),r.wb(14),r.Ub("languages",t.languages)("highlight",t.stringSlicingNegativeIndexExampleCode),r.wb(20),r.Ub("languages",t.languages)("highlight",t.stringLengthExampleCode),r.wb(26),r.Ub("languages",t.languages)("highlight",t.stringCapitalizeExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringCasefoldExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringCountExampleCode),r.wb(33),r.Ub("languages",t.languages)("highlight",t.stringStripExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringJoinExampleCode),r.wb(32),r.Ub("languages",t.languages)("highlight",t.stringSplitExampleCode),r.wb(31),r.Ub("languages",t.languages)("highlight",t.stringIndexExampleCode),r.wb(29),r.Ub("languages",t.languages)("highlight",t.stringFindExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringLowerExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringUpperExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsLowerExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsUpperExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringTitleExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsTitleExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringFormatExampleCode),r.wb(4),r.Ub("languages",t.languages)("highlight",t.stringFormatTwoExampleCode),r.wb(21),r.Ub("languages",t.languages)("highlight",t.stringReplaceExampleCode),r.wb(36),r.Ub("languages",t.languages)("highlight",t.stringEncodeDecodeExampleCode),r.wb(36),r.Ub("languages",t.languages)("highlight",t.stringStartsEndsWithExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsAlNumExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsAlphaExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsAsciiExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsDecimalExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsDigitExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringIsIdentifierExampleCode),r.wb(24),r.Ub("languages",t.languages)("highlight",t.stringIsNumericExampleCode),r.wb(19),r.Ub("languages",t.languages)("highlight",t.stringIsSpaceExampleCode),r.wb(30),r.Ub("languages",t.languages)("highlight",t.stringLjustRjustExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.stringSwapcaseExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"booleans",component:(()=>{class e{constructor(){this.languages=["python"],this.basicBooleanExampleCode="\nprint(True < False)\nprint(10 != -10)\nprint(21 > 11)\n".trim(),this.booleanIfElseExampleCode="\nnum_1 = 80\nnum_2 = 100\n\nif num_1 > num_2:\n    print('num_1 is maximum.')\nelse:\n    print('num_2 is maximum.')\n".trim(),this.booleanBoolFunctionExampleCode="\nprint(bool('Python 3'))  # True\n\nprint(bool(0))  # False\n\nprint(bool(25))  # True\n\nx = bool('Hello World')\nprint(x)  # True\n\ny = bool(['ABC'])\nprint(y)  # True\n\ny = bool([])\nprint(y)  # False\n".trim(),this.isInstanceFunctionExampleCode="\nx = 'Hello World'\n\nprint(isinstance(x, int))  # False\n\nprint(isinstance(x, str))  # True\n".trim(),this.returnTrueOrFalseFromFunctionExampleCode="\ndef return_true_or_false(s: str) -> bool:\n    return s.isnumeric()\n\nprint(return_true_or_false('123'))  # True\n\nprint(return_true_or_false('Test'))  # False\n".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-booleans"]],decls:95,vars:10,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[3,"languages","highlight"],["role","alert",1,"alert","alert-success"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Booleans in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," Booleans represent one of two values: "),r.Jb(10,"strong"),r.dc(11,"True"),r.Ib(),r.dc(12," or "),r.Jb(13,"strong"),r.dc(14,"False"),r.Ib(),r.dc(15,". "),r.Ib(),r.Jb(16,"p",6),r.dc(17," When you compare two values, the expression is evaluated and Python returns the Boolean answer. "),r.Ib(),r.Jb(18,"p",6),r.dc(19," You can evaluate any expression in Python, and get one of two answers, True or False. "),r.Ib(),r.Jb(20,"p"),r.Jb(21,"strong"),r.dc(22,"Example: Booleans"),r.Ib(),r.Ib(),r.Jb(23,"pre"),r.Hb(24,"code",7),r.Ib(),r.Ib(),r.Jb(25,"div",4),r.Jb(26,"h5",5),r.dc(27,"Booleans with If-Else"),r.Ib(),r.Hb(28,"hr"),r.Jb(29,"p",6),r.dc(30," When you run a condition in an if statement, Python returns True or False. "),r.Ib(),r.Jb(31,"p"),r.Jb(32,"strong"),r.dc(33,"Example: Booleans with If-Else"),r.Ib(),r.Ib(),r.Jb(34,"pre"),r.Hb(35,"code",7),r.Ib(),r.Jb(36,"div",8),r.Jb(37,"p",6),r.Jb(38,"strong"),r.dc(39,"Note:"),r.Ib(),r.dc(40," The bool() function allows you to evaluate any value, and give you True or False in return. "),r.Ib(),r.Ib(),r.Jb(41,"p"),r.Jb(42,"strong"),r.dc(43,"Example: bool()"),r.Ib(),r.Ib(),r.Jb(44,"pre"),r.Hb(45,"code",7),r.Ib(),r.Jb(46,"div",8),r.Jb(47,"p",6),r.Jb(48,"strong"),r.dc(49,"Remember:"),r.Ib(),r.Ib(),r.Jb(50,"p",6),r.dc(51," Any number is True, except 0. "),r.Ib(),r.Jb(52,"p",6),r.dc(53," Any string is True, except empty strings. "),r.Ib(),r.Jb(54,"p",6),r.dc(55," Any list, tuple, set, and dictionary are True, except empty ones. "),r.Ib(),r.Jb(56,"p",6),r.dc(57," Almost any value is evaluated to True if it has some sort of content. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(58,"div",1),r.Jb(59,"div",2),r.Jb(60,"div",3),r.Jb(61,"div",4),r.Jb(62,"h5",5),r.dc(63,"isinstance()"),r.Ib(),r.Hb(64,"hr"),r.Jb(65,"p"),r.Jb(66,"code"),r.Jb(67,"strong"),r.dc(68,"Method Signature:"),r.Ib(),r.dc(69," def isinstance(obj: object, target: Union[type, Tuple[Union[type, Tuple[Any, ...]], ...]]) -> bool"),r.Ib(),r.Ib(),r.Jb(70,"p"),r.dc(71," Return whether an object is an instance of a class or of a subclass thereof. "),r.Ib(),r.Jb(72,"p"),r.dc(73," A tuple, as in isinstance(x, (A, B, ...)), may be given as the target to check against. This is equivalent to isinstance(x, A) or isinstance(x, B) or ... etc. "),r.Ib(),r.Jb(74,"p"),r.Jb(75,"strong"),r.dc(76,"Example: isinstance()"),r.Ib(),r.Ib(),r.Hb(77,"hr"),r.Jb(78,"pre"),r.Hb(79,"code",7),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(80,"div",1),r.Jb(81,"div",2),r.Jb(82,"div",3),r.Jb(83,"div",4),r.Jb(84,"h5",5),r.dc(85,"Returning boolean from Function"),r.Ib(),r.Hb(86,"hr"),r.Jb(87,"p"),r.dc(88," You can create functions that returns a Boolean Value. "),r.Ib(),r.Jb(89,"p"),r.Jb(90,"strong"),r.dc(91,"Example:"),r.Ib(),r.Ib(),r.Hb(92,"hr"),r.Jb(93,"pre"),r.Hb(94,"code",7),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(24),r.Ub("languages",t.languages)("highlight",t.basicBooleanExampleCode),r.wb(11),r.Ub("languages",t.languages)("highlight",t.booleanIfElseExampleCode),r.wb(10),r.Ub("languages",t.languages)("highlight",t.booleanBoolFunctionExampleCode),r.wb(34),r.Ub("languages",t.languages)("highlight",t.isInstanceFunctionExampleCode),r.wb(15),r.Ub("languages",t.languages)("highlight",t.returnTrueOrFalseFromFunctionExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"operators",component:(()=>{class e{constructor(){this.languages=["python"],this.arithmeticOperatorExampleCode="\nop1 = 5\n\nop2 = 3\n\nprint(op1 + op2)  # 8\n\nprint(op1 - op2)  # 2\n\nprint(op1 * op2)  # 15\n\nprint(op1 / op2)  # 1.6666666666666667\n\nprint(op1 % op2)  # 2\n\nprint(op1 ** op2)  # 125\n\nprint(op1 // op2)  # 1\n".trim(),this.comparisonOperatorExampleCode="\nop1 = 150\n\nop2 = 458\n\nprint(op1 == op2)  # False\n\nprint(op1 != op2)  # True\n\nprint(op1 > op2)  # False\n\nprint(op1 < op2)  # True\n\nprint(op1 >= op2)  # False\n\nprint(op1 <= op2)  # True\n".trim(),this.logicalOperatorExampleCode="\nop1 = True\n\nop2 = False\n\nop3 = True\n\nprint(op1 and op2)  # False\n\nprint(op1 and op3)  # True\n\nprint(op1 or op2)  # True\n\nprint(op1 or op3)  # True\n\nprint(not (op1 and op2))  # True\n\nprint(not (op1 or op2))  # False\n\nprint(not (op1 and op3))  # False\n\nprint(not (op1 or op3))  # False\n".trim(),this.bitwiseOperatorExampleCode="\nop_1 = 5  # Binary of 5:   1 0 1 0\nop_2 = 10  # Binary of 10: 0 1 0 1\n\n# Binary of 5:   1 0 1 0\n# AND (&)\n# Binary of 10:  0 1 0 1\n# -----------------------\n# Result:           0 0 0 0\n\nprint(op_1 & op_2)  # 0\n\n# Binary of 5:   1 0 1 0\n# OR (&)\n# Binary of 10:  0 1 0 1\n# -----------------------\n# Result:           1 1 1 1\n\nprint(op_1 | op_2)  # 15\n\n# Binary of 5:   1 0 1 0\n# XOR (^)\n# Binary of 10:  0 1 0 1\n# -----------------------\n# Result:           1 1 1 1\n\nprint(op_1 ^ op_2)  # 15\n\n# Binary of 5:   1 0 1 0\n# -----------------------\n# NOT (~) of 5:  0 1 0 1\n\nprint(~ op_1)  # -6\n  ".trim(),this.assignmentOperatorExampleCode="\nx = 25\n\nx += 40  # x = x + 40\nprint(x)  # 65\n\nx -= 10  # x = x - 10\nprint(x)  # 55\n\nx *= 2  # x = x * 2\nprint(x)  # 110\n\nx /= 2  # x = x / 2\nprint(x)  # 55.0\n\nx **= 2  # x = x ** 2\nprint(x)  # 3025.0\n\nx //= 2  # x = x // 2\nprint(x)  # 1512.0\n  ".trim(),this.identityOperatorExampleCode="\na = 5\nb = 5\nc = 10\nd = '5'\n\nprint(a is b)  # True\nprint(a is c)  # False\nprint(a is d)  # False\n\nprint(a is not b)  # False\nprint(a is not c)  # True\nprint(a is not d)  # True\n\nprint(b is c)  # False\nprint(b is d)  # False\n\nprint(b is not c)  # True\nprint(b is not d)  # True\n  ".trim(),this.membershipOperatorExampleCode="\nstring = 'Hello World'\nnumbers = [5, 8, 7, 6, 9, 8]\n\nprint(7 in numbers)  # True\nprint(8 not in numbers)  # False\n\nprint('o' in string)  # True\nprint('W' not in string)  # False\n  ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-operators"]],decls:723,vars:14,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"table","table-bordered","text-center","table-striped","table-inverse","w-100"],[1,"thead-inverse"],[1,"w-25"],[1,"text-left"],[3,"languages","highlight"],[1,"w-75"]],template:function(e,t){if(1&e){r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Operators in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," The operator can be defined as a symbol which is responsible for a particular operation between two operands. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," Operators are the pillars of a program on which the logic is built in a specific programming language. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," Python divides the operators in the following groups: "),r.Ib(),r.Jb(14,"div",6),r.Jb(15,"ol"),r.Jb(16,"li"),r.dc(17,"Arithmetic Operators"),r.Ib(),r.Jb(18,"li"),r.dc(19,"Comparison Operators"),r.Ib(),r.Jb(20,"li"),r.dc(21,"Logical Operators"),r.Ib(),r.Jb(22,"li"),r.dc(23,"Bitwise Operators"),r.Ib(),r.Jb(24,"li"),r.dc(25,"Assignment Operators"),r.Ib(),r.Jb(26,"li"),r.dc(27,"Identity Operators"),r.Ib(),r.Jb(28,"li"),r.dc(29,"Membership Operators"),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(30,"div",1),r.Jb(31,"div",2),r.Jb(32,"div",3),r.Jb(33,"div",4),r.Jb(34,"h5",5),r.dc(35,"Arithmetic Operators"),r.Ib(),r.Hb(36,"hr"),r.Jb(37,"p"),r.dc(38," Arithmetic operators are used to perform arithmetic operations between two operands. "),r.Ib(),r.Jb(39,"table",7),r.Jb(40,"thead",8),r.Jb(41,"tr"),r.Jb(42,"td"),r.dc(43,"Name"),r.Ib(),r.Jb(44,"td"),r.dc(45,"Operator"),r.Ib(),r.Jb(46,"td",9),r.dc(47,"Example"),r.Ib(),r.Jb(48,"td"),r.dc(49,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(50,"tbody"),r.Jb(51,"tr"),r.Jb(52,"td"),r.dc(53,"Addition"),r.Ib(),r.Jb(54,"td"),r.Jb(55,"strong"),r.dc(56,"+"),r.Ib(),r.Ib(),r.Jb(57,"td"),r.dc(58,"op_1 "),r.Jb(59,"strong"),r.dc(60,"+"),r.Ib(),r.dc(61," op_2"),r.Ib(),r.Jb(62,"td",10),r.dc(63," It is used to add two operands. "),r.Ib(),r.Ib(),r.Jb(64,"tr"),r.Jb(65,"td"),r.dc(66,"Subtraction"),r.Ib(),r.Jb(67,"td"),r.Jb(68,"strong"),r.dc(69,"-"),r.Ib(),r.Ib(),r.Jb(70,"td"),r.dc(71,"op_1 "),r.Jb(72,"strong"),r.dc(73,"-"),r.Ib(),r.dc(74," op_2"),r.Ib(),r.Jb(75,"td",10),r.dc(76," It is used to subtract the second operand from the first operand. If the first operand is less than the second operand, the value results negative. "),r.Ib(),r.Ib(),r.Jb(77,"tr"),r.Jb(78,"td"),r.dc(79,"Multiplication"),r.Ib(),r.Jb(80,"td"),r.Jb(81,"strong"),r.dc(82,"*"),r.Ib(),r.Ib(),r.Jb(83,"td"),r.dc(84,"op_1 "),r.Jb(85,"strong"),r.dc(86,"*"),r.Ib(),r.dc(87," op_2"),r.Ib(),r.Jb(88,"td",10),r.dc(89," It is used to multiply one operand with the other. "),r.Ib(),r.Ib(),r.Jb(90,"tr"),r.Jb(91,"td"),r.dc(92,"Division"),r.Ib(),r.Jb(93,"td"),r.Jb(94,"strong"),r.dc(95,"/"),r.Ib(),r.Ib(),r.Jb(96,"td"),r.dc(97,"op_1 "),r.Jb(98,"strong"),r.dc(99,"/"),r.Ib(),r.dc(100," op_2"),r.Ib(),r.Jb(101,"td",10),r.dc(102," It returns the quotient after dividing the first operand by the second operand. "),r.Ib(),r.Ib(),r.Jb(103,"tr"),r.Jb(104,"td"),r.dc(105,"Modulus"),r.Ib(),r.Jb(106,"td"),r.Jb(107,"strong"),r.dc(108,"%"),r.Ib(),r.Ib(),r.Jb(109,"td"),r.dc(110,"op_1 "),r.Jb(111,"strong"),r.dc(112,"%"),r.Ib(),r.dc(113," op_2"),r.Ib(),r.Jb(114,"td",10),r.dc(115," It returns the reminder after dividing the first operand by the second operand. "),r.Ib(),r.Ib(),r.Jb(116,"tr"),r.Jb(117,"td"),r.dc(118,"Exponentiation"),r.Ib(),r.Jb(119,"td"),r.Jb(120,"strong"),r.dc(121,"**"),r.Ib(),r.Ib(),r.Jb(122,"td"),r.dc(123,"op_1 "),r.Jb(124,"strong"),r.dc(125,"**"),r.Ib(),r.dc(126," op_2"),r.Ib(),r.Jb(127,"td",10),r.dc(128," It is an exponent operator represented as it calculates the first operand power to the second operand. "),r.Ib(),r.Ib(),r.Jb(129,"tr"),r.Jb(130,"td"),r.dc(131,"Floor division"),r.Ib(),r.Jb(132,"td"),r.Jb(133,"strong"),r.dc(134,"//"),r.Ib(),r.Ib(),r.Jb(135,"td"),r.dc(136,"op_1 "),r.Jb(137,"strong"),r.dc(138,"//"),r.Ib(),r.dc(139," op_2"),r.Ib(),r.Jb(140,"td",10),r.dc(141," It gives the floor value of the quotient produced by dividing the two operands. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(142,"p"),r.Jb(143,"strong"),r.dc(144,"Example: Arithmetic Operators"),r.Ib(),r.Ib(),r.Hb(145,"hr"),r.Jb(146,"pre"),r.Hb(147,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(148,"div",1),r.Jb(149,"div",2),r.Jb(150,"div",3),r.Jb(151,"div",4),r.Jb(152,"h5",5),r.dc(153,"Comparison Operators"),r.Ib(),r.Hb(154,"hr"),r.Jb(155,"p"),r.dc(156," Comparison operators are used to comparing the value of the two operands and returns Boolean true or false accordingly. "),r.Ib(),r.Jb(157,"table",7),r.Jb(158,"thead",8),r.Jb(159,"tr"),r.Jb(160,"td"),r.dc(161,"Name"),r.Ib(),r.Jb(162,"td"),r.dc(163,"Operator"),r.Ib(),r.Jb(164,"td",9),r.dc(165,"Example"),r.Ib(),r.Jb(166,"td"),r.dc(167,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(168,"tbody"),r.Jb(169,"tr"),r.Jb(170,"td"),r.dc(171,"Equal"),r.Ib(),r.Jb(172,"td"),r.Jb(173,"strong"),r.dc(174,"=="),r.Ib(),r.Ib(),r.Jb(175,"td"),r.dc(176,"op_1 "),r.Jb(177,"strong"),r.dc(178,"=="),r.Ib(),r.dc(179," op_2"),r.Ib(),r.Jb(180,"td",10),r.dc(181," If the value of two operands is equal, then the condition becomes true. "),r.Ib(),r.Ib(),r.Jb(182,"tr"),r.Jb(183,"td"),r.dc(184,"Not equal"),r.Ib(),r.Jb(185,"td"),r.Jb(186,"strong"),r.dc(187,"!="),r.Ib(),r.Ib(),r.Jb(188,"td"),r.dc(189,"op_1 "),r.Jb(190,"strong"),r.dc(191,"!="),r.Ib(),r.dc(192," op_2"),r.Ib(),r.Jb(193,"td",10),r.dc(194," If the value of two operands is not equal, then the condition becomes true. "),r.Ib(),r.Ib(),r.Jb(195,"tr"),r.Jb(196,"td"),r.dc(197,"Greater than"),r.Ib(),r.Jb(198,"td"),r.Jb(199,"strong"),r.dc(200,">"),r.Ib(),r.Ib(),r.Jb(201,"td"),r.dc(202,"op_1 "),r.Jb(203,"strong"),r.dc(204,">"),r.Ib(),r.dc(205," op_2"),r.Ib(),r.Jb(206,"td",10),r.dc(207," If the first operand is greater than the second operand, then the condition becomes true. "),r.Ib(),r.Ib(),r.Jb(208,"tr"),r.Jb(209,"td"),r.dc(210,"Less than"),r.Ib(),r.Jb(211,"td"),r.Jb(212,"strong"),r.dc(213,"<"),r.Ib(),r.Ib(),r.Jb(214,"td"),r.dc(215,"op_1 "),r.Jb(216,"strong"),r.dc(217,"<"),r.Ib(),r.dc(218," op_2"),r.Ib(),r.Jb(219,"td",10),r.dc(220," If the first operand is less than the second operand, then the condition becomes true. "),r.Ib(),r.Ib(),r.Jb(221,"tr"),r.Jb(222,"td"),r.dc(223,"Greater than or equal to"),r.Ib(),r.Jb(224,"td"),r.Jb(225,"strong"),r.dc(226,">="),r.Ib(),r.Ib(),r.Jb(227,"td"),r.dc(228,"op_1 "),r.Jb(229,"strong"),r.dc(230,">="),r.Ib(),r.dc(231," op_2"),r.Ib(),r.Jb(232,"td",10),r.dc(233," If the first operand is greater than or equal to the second operand, then the condition becomes true. "),r.Ib(),r.Ib(),r.Jb(234,"tr"),r.Jb(235,"td"),r.dc(236,"Less than or equal to"),r.Ib(),r.Jb(237,"td"),r.Jb(238,"strong"),r.dc(239,"<="),r.Ib(),r.Ib(),r.Jb(240,"td"),r.dc(241,"op_1 "),r.Jb(242,"strong"),r.dc(243,"<="),r.Ib(),r.dc(244," op_2"),r.Ib(),r.Jb(245,"td",10),r.dc(246," If the first operand is less than or equal to the second operand, then the condition becomes true. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(247,"p"),r.Jb(248,"strong"),r.dc(249,"Example: Comparison Operators"),r.Ib(),r.Ib(),r.Hb(250,"hr"),r.Jb(251,"pre"),r.Hb(252,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(253,"div",1),r.Jb(254,"div",2),r.Jb(255,"div",3),r.Jb(256,"div",4),r.Jb(257,"h5",5),r.dc(258,"Logical Operators"),r.Ib(),r.Hb(259,"hr"),r.Jb(260,"p"),r.dc(261," The logical operators are used primarily in the expression evaluation to make a decision. "),r.Ib(),r.Jb(262,"table",7),r.Jb(263,"thead",8),r.Jb(264,"tr"),r.Jb(265,"td"),r.dc(266,"Name"),r.Ib(),r.Jb(267,"td"),r.dc(268,"Operator"),r.Ib(),r.Jb(269,"td",9),r.dc(270,"Example"),r.Ib(),r.Jb(271,"td"),r.dc(272,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(273,"tbody"),r.Jb(274,"tr"),r.Jb(275,"td"),r.dc(276,"AND"),r.Ib(),r.Jb(277,"td"),r.Jb(278,"strong"),r.dc(279,"and"),r.Ib(),r.Ib(),r.Jb(280,"td"),r.dc(281,"op_1 "),r.Jb(282,"strong"),r.dc(283,"and"),r.Ib(),r.dc(284," op_2"),r.Ib(),r.Jb(285,"td",10),r.dc(286," Returns True if both statements are true. "),r.Ib(),r.Ib(),r.Jb(287,"tr"),r.Jb(288,"td"),r.dc(289,"OR"),r.Ib(),r.Jb(290,"td"),r.Jb(291,"strong"),r.dc(292,"or"),r.Ib(),r.Ib(),r.Jb(293,"td"),r.dc(294,"op_1 "),r.Jb(295,"strong"),r.dc(296,"or"),r.Ib(),r.dc(297," op_2"),r.Ib(),r.Jb(298,"td",10),r.dc(299," Returns True if one of the statements is true "),r.Ib(),r.Ib(),r.Jb(300,"tr"),r.Jb(301,"td"),r.dc(302,"NOT"),r.Ib(),r.Jb(303,"td"),r.Jb(304,"strong"),r.dc(305,"not"),r.Ib(),r.Ib(),r.Jb(306,"td"),r.Jb(307,"strong"),r.dc(308,"not"),r.Ib(),r.dc(309," (op_1 "),r.Jb(310,"strong"),r.dc(311,"<"),r.Ib(),r.dc(312," op_2)"),r.Ib(),r.Jb(313,"td",10),r.dc(314," Reverse the result, returns False if the result is true "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(315,"p"),r.Jb(316,"strong"),r.dc(317,"Example: Logical Operators"),r.Ib(),r.Ib(),r.Hb(318,"hr"),r.Jb(319,"pre"),r.Hb(320,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(321,"div",1),r.Jb(322,"div",2),r.Jb(323,"div",3),r.Jb(324,"div",4),r.Jb(325,"h5",5),r.dc(326,"Bitwise Operators"),r.Ib(),r.Hb(327,"hr"),r.Jb(328,"p"),r.dc(329," The bitwise operators perform bit by bit operation on the values of the two operands. "),r.Ib(),r.Jb(330,"table",7),r.Jb(331,"thead",8),r.Jb(332,"tr"),r.Jb(333,"td"),r.dc(334,"Name"),r.Ib(),r.Jb(335,"td"),r.dc(336,"Operator"),r.Ib(),r.Jb(337,"td",9),r.dc(338,"Example"),r.Ib(),r.Jb(339,"td"),r.dc(340,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(341,"tbody"),r.Jb(342,"tr"),r.Jb(343,"td"),r.dc(344,"Bitwise AND"),r.Ib(),r.Jb(345,"td"),r.Jb(346,"strong"),r.dc(347,"&"),r.Ib(),r.Ib(),r.Jb(348,"td"),r.dc(349,"op_1 "),r.Jb(350,"strong"),r.dc(351,"&"),r.Ib(),r.dc(352," op_2"),r.Ib(),r.Jb(353,"td",10),r.dc(354," Sets each bit to 1 if both bits are 1. "),r.Ib(),r.Ib(),r.Jb(355,"tr"),r.Jb(356,"td"),r.dc(357,"Bitwise OR"),r.Ib(),r.Jb(358,"td"),r.Jb(359,"strong"),r.dc(360,"|"),r.Ib(),r.Ib(),r.Jb(361,"td"),r.dc(362,"op_1 "),r.Jb(363,"strong"),r.dc(364,"|"),r.Ib(),r.dc(365," op_2"),r.Ib(),r.Jb(366,"td",10),r.dc(367," Sets each bit to 1 if one of two bits is 1. "),r.Ib(),r.Ib(),r.Jb(368,"tr"),r.Jb(369,"td"),r.dc(370,"Bitwise XOR"),r.Ib(),r.Jb(371,"td"),r.Jb(372,"strong"),r.dc(373,"^"),r.Ib(),r.Ib(),r.Jb(374,"td"),r.dc(375,"op_1 "),r.Jb(376,"strong"),r.dc(377,"^"),r.Ib(),r.dc(378," op_2"),r.Ib(),r.Jb(379,"td",10),r.dc(380," Sets each bit to 1 if only one of two bits is 1. "),r.Ib(),r.Ib(),r.Jb(381,"tr"),r.Jb(382,"td"),r.dc(383,"Bitwise NOT"),r.Ib(),r.Jb(384,"td"),r.Jb(385,"strong"),r.dc(386,"~"),r.Ib(),r.Ib(),r.Jb(387,"td"),r.Jb(388,"strong"),r.dc(389,"~"),r.Ib(),r.dc(390," op"),r.Ib(),r.Jb(391,"td",10),r.dc(392," Inverts all the bits. "),r.Ib(),r.Ib(),r.Jb(393,"tr"),r.Jb(394,"td"),r.dc(395,"Bitwise Left Shift"),r.Ib(),r.Jb(396,"td"),r.Jb(397,"strong"),r.dc(398,"<<"),r.Ib(),r.Ib(),r.Jb(399,"td"),r.Jb(400,"strong"),r.dc(401,"<<"),r.Ib(),r.dc(402," op"),r.Ib(),r.Jb(403,"td",10),r.dc(404," Shift left by pushing zeros in from the right and let the leftmost bits fall off. "),r.Ib(),r.Ib(),r.Jb(405,"tr"),r.Jb(406,"td"),r.dc(407,"Bitwise Right Shift"),r.Ib(),r.Jb(408,"td"),r.Jb(409,"strong"),r.dc(410,">>"),r.Ib(),r.Ib(),r.Jb(411,"td"),r.Jb(412,"strong"),r.dc(413,">>"),r.Ib(),r.dc(414," op"),r.Ib(),r.Jb(415,"td",10),r.dc(416," Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(417,"p"),r.Jb(418,"strong"),r.dc(419,"Example: Bitwise Operators"),r.Ib(),r.Ib(),r.Hb(420,"hr"),r.Jb(421,"pre"),r.Hb(422,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(423,"div",1),r.Jb(424,"div",2),r.Jb(425,"div",3),r.Jb(426,"div",4),r.Jb(427,"h5",5),r.dc(428,"Assignment Operators"),r.Ib(),r.Hb(429,"hr"),r.Jb(430,"p"),r.dc(431," The assignment operators are used to assign the value of the right expression to the left operand. "),r.Ib(),r.Jb(432,"table",7),r.Jb(433,"thead",8),r.Jb(434,"tr"),r.Jb(435,"td"),r.dc(436,"Operator"),r.Ib(),r.Jb(437,"td",9),r.dc(438,"Example"),r.Ib(),r.Jb(439,"td",9),r.dc(440,"Equivalent"),r.Ib(),r.Jb(441,"td"),r.dc(442,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(443,"tbody"),r.Jb(444,"tr"),r.Jb(445,"td"),r.Jb(446,"strong"),r.dc(447,"="),r.Ib(),r.Ib(),r.Jb(448,"td"),r.Jb(449,"strong"),r.dc(450,"op = 50"),r.Ib(),r.Ib(),r.Jb(451,"td"),r.Jb(452,"strong"),r.dc(453,"op = 50"),r.Ib(),r.Ib(),r.Jb(454,"td",10),r.dc(455," It assigns the value of the right expression to the left operand. "),r.Ib(),r.Ib(),r.Jb(456,"tr"),r.Jb(457,"td"),r.Jb(458,"strong"),r.dc(459,"+="),r.Ib(),r.Ib(),r.Jb(460,"td"),r.Jb(461,"strong"),r.dc(462,"op += 50"),r.Ib(),r.Ib(),r.Jb(463,"td"),r.Jb(464,"strong"),r.dc(465,"op = op + 50"),r.Ib(),r.Ib(),r.Jb(466,"td",10),r.dc(467," It increases the value of the left operand by the value of the right operand and assigns the modified value back to left operand. "),r.Ib(),r.Ib(),r.Jb(468,"tr"),r.Jb(469,"td"),r.Jb(470,"strong"),r.dc(471,"-="),r.Ib(),r.Ib(),r.Jb(472,"td"),r.Jb(473,"strong"),r.dc(474,"op -= 50"),r.Ib(),r.Ib(),r.Jb(475,"td"),r.Jb(476,"strong"),r.dc(477,"op = op - 50"),r.Ib(),r.Ib(),r.Jb(478,"td",10),r.dc(479," It decreases the value of the left operand by the value of the right operand and assigns the modified value back to left operand. "),r.Ib(),r.Ib(),r.Jb(480,"tr"),r.Jb(481,"td"),r.Jb(482,"strong"),r.dc(483,"*="),r.Ib(),r.Ib(),r.Jb(484,"td"),r.Jb(485,"strong"),r.dc(486,"op *= 50"),r.Ib(),r.Ib(),r.Jb(487,"td"),r.Jb(488,"strong"),r.dc(489,"op = op * 50"),r.Ib(),r.Ib(),r.Jb(490,"td",10),r.dc(491," It multiplies the value of the left operand by the value of the right operand and assigns the modified value back to then the left operand. "),r.Ib(),r.Ib(),r.Jb(492,"tr"),r.Jb(493,"td"),r.Jb(494,"strong"),r.dc(495,"%="),r.Ib(),r.Ib(),r.Jb(496,"td"),r.Jb(497,"strong"),r.dc(498,"op %= 50"),r.Ib(),r.Ib(),r.Jb(499,"td"),r.Jb(500,"strong"),r.dc(501,"op = op % 50"),r.Ib(),r.Ib(),r.Jb(502,"td",10),r.dc(503," It divides the value of the left operand by the value of the right operand and assigns the reminder back to the left operand. "),r.Ib(),r.Ib(),r.Jb(504,"tr"),r.Jb(505,"td"),r.Jb(506,"strong"),r.dc(507,"**="),r.Ib(),r.Ib(),r.Jb(508,"td"),r.Jb(509,"strong");r.dc(510,"op **= 50"),r.Ib(),r.Ib(),r.Jb(511,"td"),r.Jb(512,"strong"),r.dc(513,"op = op ** 50"),r.Ib(),r.Ib(),r.Jb(514,"td",10),r.dc(515," Example, if x = 2, y = 2, x**=y will assign 2**2 = 4 to x. "),r.Ib(),r.Ib(),r.Jb(516,"tr"),r.Jb(517,"td"),r.Jb(518,"strong"),r.dc(519,"//="),r.Ib(),r.Ib(),r.Jb(520,"td"),r.Jb(521,"strong"),r.dc(522,"op //= 50"),r.Ib(),r.Ib(),r.Jb(523,"td"),r.Jb(524,"strong"),r.dc(525,"op = op // 50"),r.Ib(),r.Ib(),r.Jb(526,"td",10),r.dc(527," Example, if x = 2, y = 2, x//=y will assign 2//2 = 1 to x. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(528,"p"),r.Jb(529,"strong"),r.dc(530,"Example: Assignment Operators"),r.Ib(),r.Ib(),r.Hb(531,"hr"),r.Jb(532,"pre"),r.Hb(533,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(534,"div",1),r.Jb(535,"div",2),r.Jb(536,"div",3),r.Jb(537,"div",4),r.Jb(538,"h5",5),r.dc(539,"Identity Operators"),r.Ib(),r.Hb(540,"hr"),r.Jb(541,"p"),r.dc(542," Identity operators are used to compare the objects, not if they are equal, but if they are actually the same object, with the same memory location. "),r.Ib(),r.Jb(543,"table",7),r.Jb(544,"thead",8),r.Jb(545,"tr"),r.Jb(546,"td"),r.dc(547,"Operator"),r.Ib(),r.Jb(548,"td",9),r.dc(549,"Example"),r.Ib(),r.Jb(550,"td"),r.dc(551,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(552,"tbody"),r.Jb(553,"tr"),r.Jb(554,"td"),r.Jb(555,"strong"),r.dc(556,"is"),r.Ib(),r.Ib(),r.Jb(557,"td"),r.dc(558,"op_1 "),r.Jb(559,"strong"),r.dc(560,"is"),r.Ib(),r.dc(561," op_2"),r.Ib(),r.Jb(562,"td",10),r.dc(563," Returns True if both variables are the same object. "),r.Ib(),r.Ib(),r.Jb(564,"tr"),r.Jb(565,"td"),r.Jb(566,"strong"),r.dc(567,"is not"),r.Ib(),r.Ib(),r.Jb(568,"td"),r.dc(569,"op_1 "),r.Jb(570,"strong"),r.dc(571,"is not"),r.Ib(),r.dc(572," op_2"),r.Ib(),r.Jb(573,"td",10),r.dc(574," Returns True if both variables are not the same object. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(575,"p"),r.Jb(576,"strong"),r.dc(577,"Example: Identity Operators"),r.Ib(),r.Ib(),r.Hb(578,"hr"),r.Jb(579,"pre"),r.Hb(580,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(581,"div",1),r.Jb(582,"div",2),r.Jb(583,"div",3),r.Jb(584,"div",4),r.Jb(585,"h5",5),r.dc(586,"Membership Operators"),r.Ib(),r.Hb(587,"hr"),r.Jb(588,"p"),r.dc(589," Membership operators are used to test if a sequence is presented in an object. "),r.Ib(),r.Jb(590,"table",7),r.Jb(591,"thead",8),r.Jb(592,"tr"),r.Jb(593,"td"),r.dc(594,"Operator"),r.Ib(),r.Jb(595,"td",9),r.dc(596,"Example"),r.Ib(),r.Jb(597,"td"),r.dc(598,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(599,"tbody"),r.Jb(600,"tr"),r.Jb(601,"td"),r.Jb(602,"strong"),r.dc(603,"in"),r.Ib(),r.Ib(),r.Jb(604,"td"),r.dc(605,"op_1 "),r.Jb(606,"strong"),r.dc(607,"in"),r.Ib(),r.dc(608," op_2"),r.Ib(),r.Jb(609,"td",10),r.dc(610," Returns True if a sequence with the specified value is present in the object. "),r.Ib(),r.Ib(),r.Jb(611,"tr"),r.Jb(612,"td"),r.Jb(613,"strong"),r.dc(614,"not in"),r.Ib(),r.Ib(),r.Jb(615,"td"),r.dc(616,"op_1 "),r.Jb(617,"strong"),r.dc(618,"not in"),r.Ib(),r.dc(619," op_2"),r.Ib(),r.Jb(620,"td",10),r.dc(621," Returns True if a sequence with the specified value is not present in the object. "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(622,"p"),r.Jb(623,"strong"),r.dc(624,"Example: Membership Operators"),r.Ib(),r.Ib(),r.Hb(625,"hr"),r.Jb(626,"pre"),r.Hb(627,"code",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(628,"div",1),r.Jb(629,"div",2),r.Jb(630,"div",3),r.Jb(631,"div",4),r.Jb(632,"h5",5),r.dc(633,"Operators Precedence"),r.Ib(),r.Hb(634,"hr"),r.Jb(635,"p"),r.dc(636," Operator precedence determines the grouping of terms in an expression and decides how an expression is evaluated. "),r.Ib(),r.Jb(637,"table",7),r.Jb(638,"thead",8),r.Jb(639,"tr"),r.Jb(640,"td"),r.dc(641,"Operator"),r.Ib(),r.Jb(642,"td",12),r.dc(643,"Description"),r.Ib(),r.Ib(),r.Ib(),r.Jb(644,"tbody"),r.Jb(645,"tr"),r.Jb(646,"td"),r.Jb(647,"strong"),r.dc(648,"**"),r.Ib(),r.Ib(),r.Jb(649,"td",10),r.dc(650," Exponentiation "),r.Ib(),r.Ib(),r.Jb(651,"tr"),r.Jb(652,"td"),r.Jb(653,"strong"),r.dc(654,"~, +, -"),r.Ib(),r.Ib(),r.Jb(655,"td",10),r.dc(656," Complement, Unary plus and Minus "),r.Ib(),r.Ib(),r.Jb(657,"tr"),r.Jb(658,"td"),r.Jb(659,"strong"),r.dc(660,"*, /, %, //"),r.Ib(),r.Ib(),r.Jb(661,"td",10),r.dc(662," Multiply, Divide, Modulo and Floor Division "),r.Ib(),r.Ib(),r.Jb(663,"tr"),r.Jb(664,"td"),r.Jb(665,"strong"),r.dc(666,"+, -"),r.Ib(),r.Ib(),r.Jb(667,"td",10),r.dc(668," Addition and Subtraction "),r.Ib(),r.Ib(),r.Jb(669,"tr"),r.Jb(670,"td"),r.Jb(671,"strong"),r.dc(672,"<<, >>"),r.Ib(),r.Ib(),r.Jb(673,"td",10),r.dc(674," Right and left Bitwise Shift Operators "),r.Ib(),r.Ib(),r.Jb(675,"tr"),r.Jb(676,"td"),r.Jb(677,"strong"),r.dc(678,"&"),r.Ib(),r.Ib(),r.Jb(679,"td",10),r.dc(680," Bitwise AND "),r.Ib(),r.Ib(),r.Jb(681,"tr"),r.Jb(682,"td"),r.Jb(683,"strong"),r.dc(684,"^, |"),r.Ib(),r.Ib(),r.Jb(685,"td",10),r.dc(686," Bitwise XOR and Bitwise OR "),r.Ib(),r.Ib(),r.Jb(687,"tr"),r.Jb(688,"td"),r.Jb(689,"strong"),r.dc(690,"<=, <, >, >="),r.Ib(),r.Ib(),r.Jb(691,"td",10),r.dc(692," Comparison Operators "),r.Ib(),r.Ib(),r.Jb(693,"tr"),r.Jb(694,"td"),r.Jb(695,"strong"),r.dc(696,"<, >, ==, !="),r.Ib(),r.Ib(),r.Jb(697,"td",10),r.dc(698," Equality Operators "),r.Ib(),r.Ib(),r.Jb(699,"tr"),r.Jb(700,"td"),r.Jb(701,"strong"),r.dc(702,"=, %=, /=, //=, -=, +=, *=, **="),r.Ib(),r.Ib(),r.Jb(703,"td",10),r.dc(704," Assignment Operators "),r.Ib(),r.Ib(),r.Jb(705,"tr"),r.Jb(706,"td"),r.Jb(707,"strong"),r.dc(708,"is, is not"),r.Ib(),r.Ib(),r.Jb(709,"td",10),r.dc(710," Identity Operators "),r.Ib(),r.Ib(),r.Jb(711,"tr"),r.Jb(712,"td"),r.Jb(713,"strong"),r.dc(714,"in, not in"),r.Ib(),r.Ib(),r.Jb(715,"td",10),r.dc(716," Membership Operators "),r.Ib(),r.Ib(),r.Jb(717,"tr"),r.Jb(718,"td"),r.Jb(719,"strong"),r.dc(720,"and, or, not"),r.Ib(),r.Ib(),r.Jb(721,"td",10),r.dc(722," Logical Operators "),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()}2&e&&(r.wb(147),r.Ub("languages",t.languages)("highlight",t.arithmeticOperatorExampleCode),r.wb(105),r.Ub("languages",t.languages)("highlight",t.comparisonOperatorExampleCode),r.wb(68),r.Ub("languages",t.languages)("highlight",t.logicalOperatorExampleCode),r.wb(102),r.Ub("languages",t.languages)("highlight",t.bitwiseOperatorExampleCode),r.wb(111),r.Ub("languages",t.languages)("highlight",t.assignmentOperatorExampleCode),r.wb(47),r.Ub("languages",t.languages)("highlight",t.identityOperatorExampleCode),r.wb(47),r.Ub("languages",t.languages)("highlight",t.membershipOperatorExampleCode))},directives:[i.b],styles:[""]}),e})()},{path:"if-else",component:(()=>{class e{constructor(){this.languages=["python"],this.ifStatementSyntax="\nif condition:\n    # True Block\n  ".trim(),this.isStatementExampleCode="\nvar = 10\n\nif var == 10:\n    # True Block\n    print('The value of var is 10')\n".trim(),this.isStatementExampleCodeOutput="\nThe value of var is 10\n".trim(),this.ifElseStatementSyntax="\nif condition:\n    # True Block\nelse:\n    # False Block\n  ".trim(),this.isElseStatementExampleCode="\nvar = 10\n\nif var != 10:\n    # True Block\n    print('The value of var is 10')\nelse:\n    # False Block\n    print('The value of var is not 10')\n  ".trim(),this.isElseStatementExampleCodeOutput="\nThe value of var is not 10\n  ".trim(),this.elifStatementSyntax="\nif condition1:\n    # Block\nelif condition2:\n    # Block\nelif condition3:\n    # Block\nelse:\n    # Block\n  ".trim(),this.elifStatementExampleCode="\nvar = 10\n\nif var == 20:\n    print('The value of var is 20.')\nelif var == 5:\n    print('The value of var is 5.')\nelif var == 7:\n    print('The value of var is 7')\nelse:\n    print('All conditions are false.')\n  ".trim(),this.elifStatementExampleCodeOutput="\nAll conditions are false.\n  ".trim(),this.nestedIfElseStatementSyntax="\nif condition1:\n    # Block\nelif condition2:\n    # Block\nelif condition3:\n    # Block\nelse:\n    # Block\n  ".trim(),this.nestedIfElseStatementExampleCode="\nx, y, z = 10, 15, 7\n\nif x > y:\n    # Nested if-else\n    if x > z:\n        print('x is maximum')\n    else:\n        print('z is maximum')\nelse:\n    # Nested if-else\n    if y > z:\n        print('y is maximum')\n    else:\n      print('z is maximum')\n  ".trim(),this.nestedIfElseStatementExampleCodeOutput="\n  y is maximum\n  ".trim(),this.singleLineIfElseStatementSyntax="\n  True_Statement if condition else False_Statement\n  ".trim(),this.singleLineIfElseStatementExampleCode="\nx = 40\ny = 76\nz = 40\n\nprint(x) if x > y else print(y)  # single expression\n\nprint(x) if x > z else print('=') if x == z else print(z)  # multiple expression\n  ".trim(),this.singleLineIfElseStatementExampleCodeOutput="\n76\n=\n  ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-if-else"]],decls:198,vars:25,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"code-block"],[3,"languages","highlight"],[1,"flow-chart","mb-1"],[1,"text-center"],["src","../../../assets/images/python/if-statement/if_statement_fc.png","alt","If Statement Flow Chart",1,"rounded","img-fluid"],[3,"highlight"],["src","../../../assets/images/python/if-statement/if_else_statement.png","alt","If Statement Flow Chart",1,"rounded","img-fluid"],["src","../../../assets/images/python/if-statement/elif_statement_fc.png","alt","If Statement Flow Chart",1,"rounded","img-fluid"],["src","../../../assets/images/python/if-statement/nested_if_else_statement_fc.png","alt","If Statement Flow Chart",1,"rounded","img-fluid"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"if-else in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," Decision making is the most important aspect of almost all the programming languages. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," Condition checking is the backbone of decision making. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," Python supports the usual logical conditions from mathematics. "),r.Ib(),r.Jb(14,"p",6),r.dc(15," We have the following statements for "),r.Jb(16,"strong"),r.dc(17,"Decision Making"),r.Ib(),r.dc(18,". "),r.Ib(),r.Jb(19,"div",6),r.Jb(20,"ol"),r.Jb(21,"li"),r.dc(22,"if Statement"),r.Ib(),r.Jb(23,"li"),r.dc(24,"if-else Statement"),r.Ib(),r.Jb(25,"li"),r.dc(26,"elif Statement"),r.Ib(),r.Jb(27,"li"),r.dc(28,"Nested if-else Statement"),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(29,"div",1),r.Jb(30,"div",2),r.Jb(31,"div",3),r.Jb(32,"div",4),r.Jb(33,"h5",5),r.dc(34,"if Statement"),r.Ib(),r.Hb(35,"hr"),r.Jb(36,"p",6),r.dc(37," The if statement is used to test a specific condition. If the condition is true, a block of code (if-block) will be executed. "),r.Ib(),r.Jb(38,"div",7),r.Jb(39,"p"),r.Jb(40,"code"),r.Jb(41,"strong"),r.dc(42,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(43,"pre"),r.Hb(44,"code",8),r.Ib(),r.Ib(),r.Jb(45,"div",9),r.Jb(46,"p"),r.Jb(47,"code"),r.Jb(48,"strong"),r.dc(49,"Flowchart:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(50,"div",10),r.Hb(51,"img",11),r.Ib(),r.Ib(),r.Jb(52,"p"),r.Jb(53,"strong"),r.dc(54,"Example: if Statement"),r.Ib(),r.Ib(),r.Hb(55,"hr"),r.Jb(56,"pre"),r.Hb(57,"code",8),r.Ib(),r.Jb(58,"p"),r.Jb(59,"strong"),r.dc(60,"Output:"),r.Ib(),r.Ib(),r.Jb(61,"pre"),r.Hb(62,"code",12),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(63,"div",1),r.Jb(64,"div",2),r.Jb(65,"div",3),r.Jb(66,"div",4),r.Jb(67,"h5",5),r.dc(68,"if-else Statement"),r.Ib(),r.Hb(69,"hr"),r.Jb(70,"p",6),r.dc(71," The if statement is used to test a specific condition. If the condition is true, a block of code (if-block) will be executed. "),r.Ib(),r.Jb(72,"div",7),r.Jb(73,"p"),r.Jb(74,"code"),r.Jb(75,"strong"),r.dc(76,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(77,"pre"),r.Hb(78,"code",8),r.Ib(),r.Ib(),r.Jb(79,"div",9),r.Jb(80,"p"),r.Jb(81,"code"),r.Jb(82,"strong"),r.dc(83,"Flowchart:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(84,"div",10),r.Hb(85,"img",13),r.Ib(),r.Ib(),r.Jb(86,"p"),r.Jb(87,"strong"),r.dc(88,"Example: if-else Statement"),r.Ib(),r.Ib(),r.Hb(89,"hr"),r.Jb(90,"pre"),r.Hb(91,"code",8),r.Ib(),r.Jb(92,"p"),r.Jb(93,"strong"),r.dc(94,"Output:"),r.Ib(),r.Ib(),r.Jb(95,"pre"),r.Hb(96,"code",12),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(97,"div",1),r.Jb(98,"div",2),r.Jb(99,"div",3),r.Jb(100,"div",4),r.Jb(101,"h5",5),r.dc(102,"elif Statement"),r.Ib(),r.Hb(103,"hr"),r.Jb(104,"p",6),r.dc(105,' The elif keyword is pythons way of saying "if the previous conditions were not true, then try this condition". '),r.Ib(),r.Jb(106,"p",6),r.dc(107," The else keyword catches anything which isn't caught by the preceding conditions. "),r.Ib(),r.Jb(108,"div",7),r.Jb(109,"p"),r.Jb(110,"code"),r.Jb(111,"strong"),r.dc(112,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(113,"pre"),r.Hb(114,"code",8),r.Ib(),r.Ib(),r.Jb(115,"div",9),r.Jb(116,"p"),r.Jb(117,"code"),r.Jb(118,"strong"),r.dc(119,"Flowchart:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(120,"div",10),r.Hb(121,"img",14),r.Ib(),r.Ib(),r.Jb(122,"p"),r.Jb(123,"strong"),r.dc(124,"Example: elif Statement"),r.Ib(),r.Ib(),r.Hb(125,"hr"),r.Jb(126,"pre"),r.Hb(127,"code",8),r.Ib(),r.Jb(128,"p"),r.Jb(129,"strong"),r.dc(130,"Output:"),r.Ib(),r.Ib(),r.Jb(131,"pre"),r.Hb(132,"code",12),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(133,"div",1),r.Jb(134,"div",2),r.Jb(135,"div",3),r.Jb(136,"div",4),r.Jb(137,"h5",5),r.dc(138,"Nested if-else Statement"),r.Ib(),r.Hb(139,"hr"),r.Jb(140,"p",6),r.dc(141," Nested if statements enable us to use if else statement inside another if statement. "),r.Ib(),r.Jb(142,"div",7),r.Jb(143,"p"),r.Jb(144,"code"),r.Jb(145,"strong"),r.dc(146,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(147,"pre"),r.Hb(148,"code",8),r.Ib(),r.Ib(),r.Jb(149,"div",9),r.Jb(150,"p"),r.Jb(151,"code"),r.Jb(152,"strong"),r.dc(153,"Flowchart:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(154,"div",10),r.Hb(155,"img",15),r.Ib(),r.Ib(),r.Jb(156,"p"),r.Jb(157,"strong"),r.dc(158,"Example: Nested if-else Statement"),r.Ib(),r.Ib(),r.Hb(159,"hr"),r.Jb(160,"pre"),r.Hb(161,"code",8),r.Ib(),r.Jb(162,"p"),r.Jb(163,"strong"),r.dc(164,"Output:"),r.Ib(),r.Ib(),r.Jb(165,"pre"),r.Hb(166,"code",12),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(167,"div",1),r.Jb(168,"div",2),r.Jb(169,"div",3),r.Jb(170,"div",4),r.Jb(171,"h5",5),r.dc(172,"Single line if-else Statement"),r.Ib(),r.Hb(173,"hr"),r.Jb(174,"p",6),r.dc(175," If you have only one statement to execute, one for if, and one for else, you can put it all on the same line. "),r.Ib(),r.Jb(176,"p",6),r.dc(177," You can also have multiple else statements on the same line. "),r.Ib(),r.Jb(178,"p",6),r.dc(179," This is also know as Ternary Operator or Conditional Expression. "),r.Ib(),r.Jb(180,"div",7),r.Jb(181,"p"),r.Jb(182,"code"),r.Jb(183,"strong"),r.dc(184,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(185,"pre"),r.Hb(186,"code",8),r.Ib(),r.Ib(),r.Jb(187,"p"),r.Jb(188,"strong"),r.dc(189,"Example: Single line If-Else Statement"),r.Ib(),r.Ib(),r.Hb(190,"hr"),r.Jb(191,"pre"),r.Hb(192,"code",8),r.Ib(),r.Jb(193,"p"),r.Jb(194,"strong"),r.dc(195,"Output:"),r.Ib(),r.Ib(),r.Jb(196,"pre"),r.Hb(197,"code",12),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(44),r.Ub("languages",t.languages)("highlight",t.ifStatementSyntax),r.wb(13),r.Ub("languages",t.languages)("highlight",t.isStatementExampleCode),r.wb(5),r.Ub("highlight",t.isStatementExampleCodeOutput),r.wb(16),r.Ub("languages",t.languages)("highlight",t.ifElseStatementSyntax),r.wb(13),r.Ub("languages",t.languages)("highlight",t.isElseStatementExampleCode),r.wb(5),r.Ub("highlight",t.isElseStatementExampleCodeOutput),r.wb(18),r.Ub("languages",t.languages)("highlight",t.elifStatementSyntax),r.wb(13),r.Ub("languages",t.languages)("highlight",t.elifStatementExampleCode),r.wb(5),r.Ub("highlight",t.elifStatementExampleCodeOutput),r.wb(16),r.Ub("languages",t.languages)("highlight",t.nestedIfElseStatementSyntax),r.wb(13),r.Ub("languages",t.languages)("highlight",t.nestedIfElseStatementExampleCode),r.wb(5),r.Ub("highlight",t.nestedIfElseStatementExampleCodeOutput),r.wb(20),r.Ub("languages",t.languages)("highlight",t.singleLineIfElseStatementSyntax),r.wb(6),r.Ub("languages",t.languages)("highlight",t.singleLineIfElseStatementExampleCode),r.wb(5),r.Ub("highlight",t.singleLineIfElseStatementExampleCodeOutput))},directives:[i.b],styles:[""]}),e})()},{path:"for-loop",component:(()=>{class e{constructor(){this.languages=["python"],this.forLoopSyntax="\nfor var in sequence:\n    # loop block\n  ".trim(),this.forLoopExampleCode="\nfor var in range(5):\n    print(var)  # 0, 1, 2, 3, 4\n\nfor var in range(10, 15):\n    print(var)  # 10, 11, 12, 13, 14\n\nfor var in range(0, 4, 2):\n    print(var)  # 0, 2\n\nfor var in range(0, -4, -1):\n    print(var)  # 0, -1, -2, -3\n".trim(),this.iterateSequenceForLoopExampleCode="\nstring = 'Hello World!'\ndata = [25, 'Rahul', True, ['Alpesh', 8, False]]\ntpl = ('Vishal', 97, True)\n_dict = {'city': 'Surat', 'state': 'Gujarat'}\n\nfor var in string:\n    print(var)\n\nfor var in data:\n    print(var)\n\nfor var in tpl:\n    print(var)\n\nfor var in _dict.items():\n      print(var)\n".trim(),this.iterateSequenceForLoopExampleCodeOutput="\nH\ne\nl\nl\no\n\nW\no\nr\nl\nd\n!\n\n25\nRahul\nTrue\n['Alpesh', 8, False]\n\nVishal\n97\nTrue\n\n('city', 'Surat')\n('state', 'Gujarat')\n".trim(),this.enumerateForLoopExampleCode="\ndata = [25, 'Rahul', True, ['Alpesh', 8, False]]\n\n\nfor var in enumerate(data):\n    print(var)\n\n\nfor index, var in enumerate(data):\n    print('Index:', index, 'Value:', var)\n  ".trim(),this.enumerateForLoopExampleCodeOutput="\n(0, 25)\n(1, 'Rahul')\n(2, True)\n(3, ['Alpesh', 8, False])\n\nIndex: 0 Value: 25\nIndex: 1 Value: Rahul\nIndex: 2 Value: True\nIndex: 3 Value: ['Alpesh', 8, False]\n  ".trim(),this.nestedForLoopExampleCode="\nfor x in range(3):\n    for y in range(3):\n        print('x:', x, 'y:', y)\n  ".trim(),this.nestedForLoopExampleCodeOutput="\nx: 0 y: 0\nx: 0 y: 1\nx: 0 y: 2\nx: 1 y: 0\nx: 1 y: 1\nx: 1 y: 2\nx: 2 y: 0\nx: 2 y: 1\nx: 2 y: 2\n  ".trim(),this.nestedStarPatterForLoopExampleCode="\nfor x in range(1, 5):\n    for y in range(x):\n        print('*', end='')\n    print('')\n  ".trim(),this.nestedStarPatterForLoopExampleCodeOutput="\n*\n**\n***\n****\n  ".trim(),this.forElseLoopSyntax="\nfor var in sequence:\n    # loop block\nelse:\n    # else block\n  ".trim(),this.forElseLoopExampleCode="\nfor x in range(5):\n    print('Value of x is: ', x)\nelse:\n    print('Loop is over')\n  ".trim(),this.forElseLoopExampleCodeOutput="\nValue of x is:  0\nValue of x is:  1\nValue of x is:  2\nValue of x is:  3\nValue of x is:  4\nLoop is over\n  ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-for-loop"]],decls:155,vars:26,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"code-block"],[3,"languages","highlight"],[1,"flow-chart","mb-1"],[1,"text-center"],["src","../../../assets/images/python/loop/for_loop_fc.png","alt","If Statement Flow Chart",1,"rounded","img-fluid"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"For loop in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," A for loop is used for iterating over a sequence like list, a tuple, a dictionary, a set, or a string. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," It is frequently used to traverse the data structures like list, tuple, or dictionary. "),r.Ib(),r.Jb(12,"div",7),r.Jb(13,"p"),r.Jb(14,"code"),r.Jb(15,"strong"),r.dc(16,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(17,"pre"),r.Hb(18,"code",8),r.Ib(),r.Ib(),r.Jb(19,"div",9),r.Jb(20,"p"),r.Jb(21,"code"),r.Jb(22,"strong"),r.dc(23,"Flowchart:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(24,"div",10),r.Hb(25,"img",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(26,"div",1),r.Jb(27,"div",2),r.Jb(28,"div",3),r.Jb(29,"div",4),r.Jb(30,"h5",5),r.dc(31,"range() function"),r.Ib(),r.Hb(32,"hr"),r.Jb(33,"p",6),r.dc(34," The range() function is used to generate the sequence of the numbers. If we pass the range(10), it will generate the numbers from 0 to 9. "),r.Ib(),r.Jb(35,"div",7),r.Jb(36,"p"),r.Jb(37,"code"),r.Jb(38,"strong"),r.dc(39,"Method Signature:"),r.Ib(),r.dc(40," range(start: int, stop: int, step: int) -> None"),r.Ib(),r.Ib(),r.Ib(),r.Jb(41,"p"),r.dc(42," Return an object that produces a sequence of integers from start (inclusive) to stop (exclusive) by step. "),r.Ib(),r.Jb(43,"p"),r.dc(44," range(4) produces 0, 1, 2, 3. "),r.Ib(),r.Jb(45,"p"),r.dc(46," When step is given, it specifies the increment (or decrement). "),r.Ib(),r.Jb(47,"p"),r.Jb(48,"strong"),r.dc(49,"Example: range() function"),r.Ib(),r.Ib(),r.Hb(50,"hr"),r.Jb(51,"pre"),r.Hb(52,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(53,"div",1),r.Jb(54,"div",2),r.Jb(55,"div",3),r.Jb(56,"div",4),r.Jb(57,"h5",5),r.dc(58,"Iterating Strings and Sequence"),r.Ib(),r.Hb(59,"hr"),r.Jb(60,"p",6),r.dc(61," With the for loop, we can execute a set of statements, once for each item in a list, tuple, set etc. "),r.Ib(),r.Jb(62,"p"),r.Jb(63,"strong"),r.dc(64,"Example: Iterating Strings and Sequence"),r.Ib(),r.Ib(),r.Hb(65,"hr"),r.Jb(66,"pre"),r.Hb(67,"code",8),r.Ib(),r.Jb(68,"p"),r.Jb(69,"strong"),r.dc(70,"Output:"),r.Ib(),r.Ib(),r.Jb(71,"pre"),r.Hb(72,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(73,"div",1),r.Jb(74,"div",2),r.Jb(75,"div",3),r.Jb(76,"div",4),r.Jb(77,"h5",5),r.dc(78,"enumerate() function"),r.Ib(),r.Hb(79,"hr"),r.Jb(80,"p",6),r.dc(81," Enumerate() method adds a counter to an iterable and returns it in a form of enumerate object. "),r.Ib(),r.Jb(82,"p"),r.dc(83," This enumerate object can then be used directly in for loops or be converted into a list of tuples using list() method. "),r.Ib(),r.Jb(84,"p"),r.Jb(85,"strong"),r.dc(86,"Example: enumerate() function"),r.Ib(),r.Ib(),r.Hb(87,"hr"),r.Jb(88,"pre"),r.Hb(89,"code",8),r.Ib(),r.Jb(90,"p"),r.Jb(91,"strong"),r.dc(92,"Output:"),r.Ib(),r.Ib(),r.Jb(93,"pre"),r.Hb(94,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(95,"div",1),r.Jb(96,"div",2),r.Jb(97,"div",3),r.Jb(98,"div",4),r.Jb(99,"h5",5),r.dc(100,"Nested for loop"),r.Ib(),r.Hb(101,"hr"),r.Jb(102,"p",6),r.dc(103," Python allows us to nest any number of for loops inside a for loop "),r.Ib(),r.Jb(104,"p"),r.dc(105," The inner loop is executed n number of times for every iteration of the outer loop. "),r.Ib(),r.Jb(106,"p"),r.Jb(107,"strong"),r.dc(108,"Example: Nested for loop"),r.Ib(),r.Ib(),r.Hb(109,"hr"),r.Jb(110,"pre"),r.Hb(111,"code",8),r.Ib(),r.Jb(112,"p"),r.Jb(113,"strong"),r.dc(114,"Output:"),r.Ib(),r.Ib(),r.Jb(115,"pre"),r.Hb(116,"code",8),r.Ib(),r.Jb(117,"p"),r.Jb(118,"strong"),r.dc(119,"Example: '*' Pattern"),r.Ib(),r.Ib(),r.Hb(120,"hr"),r.Jb(121,"pre"),r.Hb(122,"code",8),r.Ib(),r.Jb(123,"p"),r.Jb(124,"strong"),r.dc(125,"Output:"),r.Ib(),r.Ib(),r.Jb(126,"pre"),r.Hb(127,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(128,"div",1),r.Jb(129,"div",2),r.Jb(130,"div",3),r.Jb(131,"div",4),r.Jb(132,"h5",5),r.dc(133,"for-else statement"),r.Ib(),r.Hb(134,"hr"),r.Jb(135,"p",6),r.dc(136," The else keyword in a for loop specifies a block of code to be executed when the loop is finished. "),r.Ib(),r.Jb(137,"div",7),r.Jb(138,"p"),r.Jb(139,"code"),r.Jb(140,"strong"),r.dc(141,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(142,"pre"),r.Hb(143,"code",8),r.Ib(),r.Ib(),r.Jb(144,"p"),r.Jb(145,"strong"),r.dc(146,"Example: for-else statement"),r.Ib(),r.Ib(),r.Hb(147,"hr"),r.Jb(148,"pre"),r.Hb(149,"code",8),r.Ib(),r.Jb(150,"p"),r.Jb(151,"strong"),r.dc(152,"Output:"),r.Ib(),r.Ib(),r.Jb(153,"pre"),r.Hb(154,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(18),r.Ub("languages",t.languages)("highlight",t.forLoopSyntax),r.wb(34),r.Ub("languages",t.languages)("highlight",t.forLoopExampleCode),r.wb(15),r.Ub("languages",t.languages)("highlight",t.iterateSequenceForLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.iterateSequenceForLoopExampleCodeOutput),r.wb(17),r.Ub("languages",t.languages)("highlight",t.enumerateForLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.enumerateForLoopExampleCodeOutput),r.wb(17),r.Ub("languages",t.languages)("highlight",t.nestedForLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.nestedForLoopExampleCodeOutput),r.wb(6),r.Ub("languages",t.languages)("highlight",t.nestedStarPatterForLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.nestedStarPatterForLoopExampleCodeOutput),r.wb(16),r.Ub("languages",t.languages)("highlight",t.forElseLoopSyntax),r.wb(6),r.Ub("languages",t.languages)("highlight",t.forElseLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.forElseLoopExampleCodeOutput))},directives:[i.b],styles:[""]}),e})()},{path:"while-loop",component:(()=>{class e{constructor(){this.languages=["python"],this.whileLoopSyntax="\nwhile condition:\n    # loop block\n    # Increment / Decrement\n  ".trim(),this.whileLoopExampleCode="\n# initialization\nx = 1\n\n# checking condition\nwhile x < 11:\n    # loop block\n    print(x)\n    # increment / decrement\n    x += 1\n".trim(),this.whileLoopExampleCodeOutput="\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n".trim(),this.infiniteWhileLoopExampleCode="\nwhile True:\n    # infinite loop\n    print('Hello World!')\n".trim(),this.infiniteWhileLoopExampleCodeOutput="\nHello World!\nHello World!\nHello World!\nHello World!\n.\n.\n.\nHello World!\n".trim(),this.whileElseLoopSyntax="\nwhile condition:\n    # loop block\n    # Increment / Decrement\nelse:\n    # else block\n  ".trim(),this.whileElseLoopExampleCode="\nx = 1\n\nwhile x < 6:\n    print('Value of x is: ', x)\n    x += 1\nelse:\n    print('Loop is over')\n  ".trim(),this.whileElseLoopExampleCodeOutput="\nValue of x is:  1\nValue of x is:  2\nValue of x is:  3\nValue of x is:  4\nValue of x is:  5\nLoop is over\n  ".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-while-loop"]],decls:95,vars:16,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"code-block"],[3,"languages","highlight"],[1,"flow-chart","mb-1"],[1,"text-center"],["src","../../../assets/images/python/loop/while-loop-fc.png","alt","While Loop Flow Chart",1,"rounded","img-fluid"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"While loop in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," With the "),r.Jb(10,"strong"),r.dc(11,"while"),r.Ib(),r.dc(12," loop, we can execute a set of statements as long as a condition is true. "),r.Ib(),r.Jb(13,"p",6),r.dc(14," It is also know as "),r.Jb(15,"strong"),r.dc(16,"Entry Control Loop"),r.Ib(),r.dc(17,". "),r.Ib(),r.Jb(18,"div",7),r.Jb(19,"p"),r.Jb(20,"code"),r.Jb(21,"strong"),r.dc(22,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(23,"pre"),r.Hb(24,"code",8),r.Ib(),r.Ib(),r.Jb(25,"div",9),r.Jb(26,"p"),r.Jb(27,"code"),r.Jb(28,"strong"),r.dc(29,"Flowchart:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(30,"div",10),r.Hb(31,"img",11),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(32,"div",1),r.Jb(33,"div",2),r.Jb(34,"div",3),r.Jb(35,"div",4),r.Jb(36,"h5",5),r.dc(37,"Example: Print 1 to 10 using while loop"),r.Ib(),r.Hb(38,"hr"),r.Jb(39,"pre"),r.Hb(40,"code",8),r.Ib(),r.Jb(41,"p"),r.Jb(42,"strong"),r.dc(43,"Output:"),r.Ib(),r.Ib(),r.Jb(44,"pre"),r.Hb(45,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(46,"div",1),r.Jb(47,"div",2),r.Jb(48,"div",3),r.Jb(49,"div",4),r.Jb(50,"h5",5),r.dc(51,"The Infinite Loop"),r.Ib(),r.Hb(52,"hr"),r.Jb(53,"p",6),r.dc(54," A loop becomes infinite loop if a condition never becomes false. You must use caution when using while loops because of the possibility that this condition never resolves to a false value. This results in a loop that never ends. Such a loop is called an infinite loop. "),r.Ib(),r.Jb(55,"p",6),r.dc(56," An infinite loop might be useful in client/server programming where the server needs to run continuously so that client programs can communicate with it as and when required. "),r.Ib(),r.Jb(57,"p"),r.Jb(58,"strong"),r.dc(59,"Example: The Infinite Loop"),r.Ib(),r.Ib(),r.Hb(60,"hr"),r.Jb(61,"pre"),r.Hb(62,"code",8),r.Ib(),r.Jb(63,"p"),r.Jb(64,"strong"),r.dc(65,"Output:"),r.Ib(),r.Ib(),r.Jb(66,"pre"),r.Hb(67,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(68,"div",1),r.Jb(69,"div",2),r.Jb(70,"div",3),r.Jb(71,"div",4),r.Jb(72,"h5",5),r.dc(73,"while-else statement"),r.Ib(),r.Hb(74,"hr"),r.Jb(75,"p",6),r.dc(76," With the else statement, we can run a block of code once when the condition no longer is true. "),r.Ib(),r.Jb(77,"div",7),r.Jb(78,"p"),r.Jb(79,"code"),r.Jb(80,"strong"),r.dc(81,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(82,"pre"),r.Hb(83,"code",8),r.Ib(),r.Ib(),r.Jb(84,"p"),r.Jb(85,"strong"),r.dc(86,"Example: while-else statement"),r.Ib(),r.Ib(),r.Hb(87,"hr"),r.Jb(88,"pre"),r.Hb(89,"code",8),r.Ib(),r.Jb(90,"p"),r.Jb(91,"strong"),r.dc(92,"Output:"),r.Ib(),r.Ib(),r.Jb(93,"pre"),r.Hb(94,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(24),r.Ub("languages",t.languages)("highlight",t.whileLoopSyntax),r.wb(16),r.Ub("languages",t.languages)("highlight",t.whileLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.whileLoopExampleCodeOutput),r.wb(17),r.Ub("languages",t.languages)("highlight",t.infiniteWhileLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.infiniteWhileLoopExampleCodeOutput),r.wb(16),r.Ub("languages",t.languages)("highlight",t.whileElseLoopSyntax),r.wb(6),r.Ub("languages",t.languages)("highlight",t.whileElseLoopExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.whileElseLoopExampleCodeOutput))},directives:[i.b],styles:[""]}),e})()},{path:"break-continue-pass",component:(()=>{class e{constructor(){this.languages=["python"],this.breakStatementSyntax="\n# loop body\nbreak  # break keyword\n  ".trim(),this.breakStatementExampleCode="\ndata = [1, 2, 5, 6, 3, 9, 0]\n\nfor var in data:\n    if var == 3:\n        print('Value Matched')\n        print('Value is: ', var)\n        # breaking iteration\n        break\n".trim(),this.breakStatementExampleCodeOutput="\nValue Matched\nValue is:  3\n".trim(),this.breakStatementExample2Code="\nstring = 'Hello!'\n\nfor var in string:\n    if var == 'l':\n        break\n    print(var)\n".trim(),this.breakStatementExample2CodeOutput="\nH\ne\n".trim(),this.continueStatementSyntax="\n# loop body\ncontinue  # continue keyword\n  ".trim(),this.continueStatementExampleCode="\ndata = [1, 2, 5, 6, 3, 9, 0]\n\nfor var in data:\n    if var == 3:\n        # continue next iteration\n        continue\n    print('Value is: ', var)\n".trim(),this.continueStatementExampleCodeOutput="\nValue is:  1\nValue is:  2\nValue is:  5\nValue is:  6\nValue is:  9\nValue is:  0\n".trim(),this.passStatementSyntax="\npass  # pass keyword\n  ".trim(),this.passStatementExampleCode="\ni = 0\n\nif i == 0:\n    pass\nelse:\n    print(False)\n".trim(),this.passStatementExample2Code="\n  data = [1, 4, 2, 6, 8]\n\n  for var in data:\n      pass\n".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-break-continue-pass"]],decls:136,vars:22,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"code-block"],[3,"languages","highlight"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Break keyword in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," With the "),r.Jb(10,"strong"),r.dc(11,"break"),r.Ib(),r.dc(12," statement, we can stop the loop before it has looped through all the items. "),r.Ib(),r.Jb(13,"p",6),r.dc(14," The break is commonly used in the cases where we need to break the loop for a given condition. "),r.Ib(),r.Jb(15,"p",6),r.dc(16," In other words, we can say that break is used to abort the current execution of the program and the control goes to the next line after the loop. "),r.Ib(),r.Jb(17,"div",7),r.Jb(18,"p"),r.Jb(19,"code"),r.Jb(20,"strong"),r.dc(21,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(22,"pre"),r.Hb(23,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(24,"div",1),r.Jb(25,"div",2),r.Jb(26,"div",3),r.Jb(27,"div",4),r.Jb(28,"h5",5),r.dc(29,"Example - 1: break keyword"),r.Ib(),r.Hb(30,"hr"),r.Jb(31,"pre"),r.Hb(32,"code",8),r.Ib(),r.Jb(33,"p"),r.Jb(34,"strong"),r.dc(35,"Output:"),r.Ib(),r.Ib(),r.Jb(36,"pre"),r.Hb(37,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(38,"div",1),r.Jb(39,"div",2),r.Jb(40,"div",3),r.Jb(41,"div",4),r.Jb(42,"h5",5),r.dc(43,"Example - 2: break keyword"),r.Ib(),r.Hb(44,"hr"),r.Jb(45,"pre"),r.Hb(46,"code",8),r.Ib(),r.Jb(47,"p"),r.Jb(48,"strong"),r.dc(49,"Output:"),r.Ib(),r.Ib(),r.Jb(50,"pre"),r.Hb(51,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(52,"div",1),r.Jb(53,"div",2),r.Jb(54,"div",3),r.Jb(55,"div",4),r.Jb(56,"h5",5),r.dc(57,"Continue keyword in Python"),r.Ib(),r.Hb(58,"hr"),r.Jb(59,"p",6),r.dc(60," With the "),r.Jb(61,"strong"),r.dc(62,"continue"),r.Ib(),r.dc(63," statement, we can stop the current iteration of the loop, and continue with the next. "),r.Ib(),r.Jb(64,"p",6),r.dc(65," It is mainly used for a particular condition inside the loop so that we can skip some specific code for a particular condition. "),r.Ib(),r.Jb(66,"p",6),r.dc(67," The continue statement in Python is used to bring the program control to the beginning of the loop. "),r.Ib(),r.Jb(68,"p",6),r.dc(69," The continue statement skips the remaining lines of code inside the loop and start with the next iteration. "),r.Ib(),r.Jb(70,"p",6),r.dc(71," It is mainly used for a particular condition inside the loop so that we can skip some specific code for a particular condition. "),r.Ib(),r.Jb(72,"div",7),r.Jb(73,"p"),r.Jb(74,"code"),r.Jb(75,"strong"),r.dc(76,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(77,"pre"),r.Hb(78,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(79,"div",1),r.Jb(80,"div",2),r.Jb(81,"div",3),r.Jb(82,"div",4),r.Jb(83,"h5",5),r.dc(84,"Example: continue keyword"),r.Ib(),r.Hb(85,"hr"),r.Jb(86,"pre"),r.Hb(87,"code",8),r.Ib(),r.Jb(88,"p"),r.Jb(89,"strong"),r.dc(90,"Output:"),r.Ib(),r.Ib(),r.Jb(91,"pre"),r.Hb(92,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(93,"div",1),r.Jb(94,"div",2),r.Jb(95,"div",3),r.Jb(96,"div",4),r.Jb(97,"h5",5),r.dc(98,"Pass keyword in Python"),r.Ib(),r.Hb(99,"hr"),r.Jb(100,"p",6),r.dc(101," The pass keyword is used to execute nothing. "),r.Jb(102,"strong"),r.dc(103,"pass = nothing"),r.Ib(),r.dc(104,". "),r.Ib(),r.Jb(105,"p",6),r.dc(106," When we don't want to execute code, the pass can be used to execute empty. "),r.Ib(),r.Jb(107,"p",6),r.dc(108," If we want to bypass any code pass statement can be used. "),r.Ib(),r.Jb(109,"p",6),r.dc(110," It is beneficial when a statement is required syntactically, but we want we don't want to execute or execute it later. The difference between the comments and pass is that, comments are entirely ignored by the Python interpreter, where the pass statement is not ignored. "),r.Ib(),r.Jb(111,"div",7),r.Jb(112,"p"),r.Jb(113,"code"),r.Jb(114,"strong"),r.dc(115,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(116,"pre"),r.Hb(117,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(118,"div",1),r.Jb(119,"div",2),r.Jb(120,"div",3),r.Jb(121,"div",4),r.Jb(122,"h5",5),r.dc(123,"Example - 1: pass statement"),r.Ib(),r.Hb(124,"hr"),r.Jb(125,"pre"),r.Hb(126,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(127,"div",1),r.Jb(128,"div",2),r.Jb(129,"div",3),r.Jb(130,"div",4),r.Jb(131,"h5",5),r.dc(132,"Example - 2: pass statement"),r.Ib(),r.Hb(133,"hr"),r.Jb(134,"pre"),r.Hb(135,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(23),r.Ub("languages",t.languages)("highlight",t.breakStatementSyntax),r.wb(9),r.Ub("languages",t.languages)("highlight",t.breakStatementExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.breakStatementExampleCodeOutput),r.wb(9),r.Ub("languages",t.languages)("highlight",t.breakStatementExample2Code),r.wb(5),r.Ub("languages",t.languages)("highlight",t.breakStatementExample2CodeOutput),r.wb(27),r.Ub("languages",t.languages)("highlight",t.continueStatementSyntax),r.wb(9),r.Ub("languages",t.languages)("highlight",t.continueStatementExampleCode),r.wb(5),r.Ub("languages",t.languages)("highlight",t.continueStatementExampleCodeOutput),r.wb(25),r.Ub("languages",t.languages)("highlight",t.passStatementSyntax),r.wb(9),r.Ub("languages",t.languages)("highlight",t.passStatementExampleCode),r.wb(9),r.Ub("languages",t.languages)("highlight",t.passStatementExample2Code))},directives:[i.b],styles:[""]}),e})()},{path:"lists",component:(()=>{class e{constructor(){this.languages=["python"],this.listStatementSyntax="\nlist_variable_name = [value_1, value_2, ..., value_n]\n\n# OR\n\nlist_variable_name = list([value_1, value_2, ..., value_n])\n  ".trim(),this.listAccessExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik']\n\nprint(type(list_variable_name))  # <class 'list'>\nprint(list_variable_name)  # [10, True, 5.8, 'Pratik']\nprint(list_variable_name[1])  # True\n\nlist_variable_name = list([False, 4.7, 'Alpesh', 9])\n\nprint(type(list_variable_name))  # <class 'list'>\nprint(list_variable_name)  # [False, 4.7, 'Alpesh', 9]\nprint(list_variable_name[2])  # Alpesh\n".trim(),this.listSlicingAndNegativeIndexExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik']\n\n# Slicing\nprint(list_variable_name[2:4])  # [5.8, 'Pratik']\nprint(list_variable_name[1:4:2])  # [True, 'Pratik']\n\n# Negative Index\nprint(list_variable_name[-1])  # Pratik\nprint(list_variable_name[-1:-4:-1])  # ['Pratik', 5.8, True]\nprint(list_variable_name[-1:-4:-2])  # ['Pratik', True]\n".trim(),this.listBuiltInExampleCode="\ndata = [50, 69, 89, 80, 34]\ntpl = (1, 2, 3, 8, 4)\n\nprint(len(data))  # 5\nprint(max(data))  # 89\nprint(min(data))  # 34\nprint(list(tpl))  # [1, 2, 3, 8, 4]\n".trim(),this.listIndexMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik']\n\nprint(list_variable_name.index(10))  # 0\nprint(list_variable_name.index('Pratik', 0, 4))  # 3\n".trim(),this.listCountMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nprint(list_variable_name.count(10))  # 2\nprint(list_variable_name.count(False))  # 0\n".trim(),this.listRemoveMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nlist_variable_name.remove(False)\n\nprint(list_variable_name)  # [True, 5.8, 'Pratik', 10]\n".trim(),this.listPopMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nitem = list_variable_name.pop(3)\n\nprint(item)  # Pratik\n\nprint(list_variable_name)  # [10, True, 5.8, 10]\n".trim(),this.listCopyMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nitem = list_variable_name.copy()\n\nprint(item)  # [10, True, 5.8, 'Pratik', 10]\n\nprint(list_variable_name)  # [10, True, 5.8, 'Pratik', 10]\n".trim(),this.listClearMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nlist_variable_name.clear()\n\nprint(list_variable_name)  # []\n".trim(),this.listExtendMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nlist_variable_name.extend([48, 68, 25])\n\nprint(list_variable_name)  # [10, True, 5.8, 'Pratik', 10, 48, 68, 25]\n".trim(),this.listAppendMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nlist_variable_name.append(68)\n\nlist_variable_name.append([48, 68, 25])\n\nprint(list_variable_name)  # [10, True, 5.8, 'Pratik', 10, 68, [48, 68, 25]]\n".trim(),this.listInsertMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik', 10]\n\nlist_variable_name.insert(2, 'Inserted Element')\n\nprint(list_variable_name)  # [10, True, 'Inserted Element', 5.8, 'Pratik', 10]\n".trim(),this.listReverseMethodExampleCode="\nlist_variable_name = [10, True, 5.8, 'Pratik']\n\nlist_variable_name.reverse()\n\nprint(list_variable_name)  # ['Pratik', 5.8, True, 10]\n".trim(),this.listSortMethodExampleCode="\nlist_variable_name = [10, 51, 98, 74, 2, 75]\n\nlist_variable_name.sort()\n\nprint(list_variable_name)  # [2, 10, 51, 74, 75, 98]\n\nlist_variable_name.sort(reverse=True)\n\nprint(list_variable_name)  # [98, 75, 74, 51, 10, 2]\n".trim(),this.listSortMethodExample2Code="\ndata = [\n  {'name': 'Rahul', 'number': 31, 'online': True},\n  {'name': 'Alpesh', 'number': 8, 'online': True},\n  {'name': 'Vishal', 'number': 97, 'online': False}\n]\n\n\ndef sort_by_statue(arg):\n    return arg['online']\n\n\ndata.sort(key=sort_by_statue)\n\n# [\n#   {'name': 'Vishal', 'number': 97, 'online': False},\n#   {'name': 'Rahul', 'number': 31, 'online': True},\n#   {'name': 'Alpesh', 'number': 8, 'online': True}\n# ]\nprint(data)\n\ndata.sort(key=lambda obj: len(obj['name']))\n\n# [\n#   {'name': 'Rahul', 'number': 31, 'online': True},\n#   {'name': 'Vishal', 'number': 97, 'online': False},\n#   {'name': 'Alpesh', 'number': 8, 'online': True}\n# ]\nprint(data)\n\ndata.sort(key=lambda obj: obj['number'])\n\n# [\n#   {'name': 'Alpesh', 'number': 8, 'online': True},\n#   {'name': 'Rahul', 'number': 31, 'online': True},\n#   {'name': 'Vishal', 'number': 97, 'online': False}\n# ]\nprint(data)\n".trim()}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.Ab({type:e,selectors:[["app-lists"]],decls:361,vars:32,consts:[[1,"container"],[1,"card","mb-3","shadow-sm"],[1,"card-body"],[1,"row"],[1,"col-lg-12"],[1,"card-title"],[1,"card-text","text-justify"],[1,"code-block"],[3,"languages","highlight"],[1,"h5"],["role","alert",1,"alert","alert-danger"]],template:function(e,t){1&e&&(r.Jb(0,"div",0),r.Jb(1,"div",1),r.Jb(2,"div",2),r.Jb(3,"div",3),r.Jb(4,"div",4),r.Jb(5,"h5",5),r.dc(6,"Lists in Python"),r.Ib(),r.Hb(7,"hr"),r.Jb(8,"p",6),r.dc(9," A list in Python is used to store the sequence of various types of data. "),r.Ib(),r.Jb(10,"p",6),r.dc(11," In python, Lists is a collection of different data types. "),r.Ib(),r.Jb(12,"p",6),r.dc(13," The items in the list are separated with the comma (,) and enclosed with the square brackets []. "),r.Ib(),r.Jb(14,"div",7),r.Jb(15,"p"),r.Jb(16,"code"),r.Jb(17,"strong"),r.dc(18,"Syntax:"),r.Ib(),r.Ib(),r.Ib(),r.Jb(19,"pre"),r.Hb(20,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(21,"div",1),r.Jb(22,"div",2),r.Jb(23,"div",3),r.Jb(24,"div",4),r.Jb(25,"h5",5),r.dc(26,"Declare and Access items"),r.Ib(),r.Hb(27,"hr"),r.Jb(28,"p",6),r.dc(29," You access the list items by referring to the index number. "),r.Ib(),r.Jb(30,"pre"),r.Hb(31,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(32,"div",1),r.Jb(33,"div",2),r.Jb(34,"div",3),r.Jb(35,"div",4),r.Jb(36,"h5",5),r.dc(37,"Slicing and Negative Index"),r.Ib(),r.Hb(38,"hr"),r.Jb(39,"p",6),r.Jb(40,"strong"),r.dc(41,"Slicing"),r.Ib(),r.Ib(),r.Jb(42,"div",7),r.Jb(43,"p"),r.Jb(44,"code"),r.Jb(45,"strong"),r.dc(46,"Syntax:"),r.Ib(),r.dc(47," list_variable[start:end:step]"),r.Ib(),r.Ib(),r.Ib(),r.Jb(48,"p",6),r.dc(49," You can specify a range of indexes by specifying where to start and where to end the range. "),r.Ib(),r.Jb(50,"p",6),r.dc(51," When specifying a range, the return value will be a new list with the specified items. "),r.Ib(),r.Jb(52,"p",6),r.Jb(53,"strong"),r.dc(54,"Negative Indexing"),r.Ib(),r.Ib(),r.Jb(55,"p",6),r.dc(56," Negative indexing means beginning from the end, -1 refers to the last item, -2 refers to the second last item etc. "),r.Ib(),r.Jb(57,"p"),r.Jb(58,"strong"),r.dc(59,"Example: Slicing and Negative Index"),r.Ib(),r.Ib(),r.Hb(60,"hr"),r.Jb(61,"pre"),r.Hb(62,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(63,"div",1),r.Jb(64,"div",2),r.Jb(65,"div",3),r.Jb(66,"div",4),r.Jb(67,"h5",5),r.dc(68,"List - Built in methods"),r.Ib(),r.Hb(69,"hr"),r.Jb(70,"div",6),r.Jb(71,"p",9),r.dc(72,"len()"),r.Ib(),r.Hb(73,"hr"),r.Jb(74,"p"),r.Jb(75,"code"),r.Jb(76,"strong"),r.dc(77,"Method Signature:"),r.Ib(),r.dc(78," def len(__o: Sized) -> int"),r.Ib(),r.Ib(),r.Jb(79,"p"),r.dc(80," Return the number of items in a container. "),r.Ib(),r.Jb(81,"p",9),r.dc(82,"max()"),r.Ib(),r.Hb(83,"hr"),r.Jb(84,"p"),r.Jb(85,"code"),r.Jb(86,"strong"),r.dc(87,"Method Signature:"),r.Ib(),r.dc(88," def max(__iterable: Iterable[_T], *, key: (_T) -> Any, default: _VT) -> Union[_T, _VT]"),r.Ib(),r.Ib(),r.Jb(89,"p"),r.dc(90," With a single iterable argument, return its biggest item. "),r.Ib(),r.Jb(91,"p"),r.dc(92," With two or more arguments, return the largest argument. "),r.Ib(),r.Jb(93,"p",9),r.dc(94,"min()"),r.Ib(),r.Hb(95,"hr"),r.Jb(96,"p"),r.Jb(97,"code"),r.Jb(98,"strong"),r.dc(99,"Method Signature:"),r.Ib(),r.dc(100," def min(__iterable: Iterable[_T], *, key: (_T) -> Any, default: _VT) -> Union[_T, _VT]"),r.Ib(),r.Ib(),r.Jb(101,"p"),r.dc(102," With a single iterable argument, return its smallest item. "),r.Ib(),r.Jb(103,"p"),r.dc(104," With two or more arguments, return the smallest argument. "),r.Ib(),r.Jb(105,"p",9),r.dc(106,"list()"),r.Ib(),r.Hb(107,"hr"),r.Jb(108,"p"),r.Jb(109,"code"),r.Jb(110,"strong"),r.dc(111,"Method Signature:"),r.Ib(),r.dc(112," (self: list) -> None"),r.Ib(),r.Ib(),r.Jb(113,"p"),r.Jb(114,"code"),r.Jb(115,"strong"),r.dc(116,"Method Signature:"),r.Ib(),r.dc(117," (self: list, iterable: Iterable[_T]) -> None"),r.Ib(),r.Ib(),r.Jb(118,"p"),r.dc(119," It converts any sequence to the list. "),r.Ib(),r.Jb(120,"p"),r.Jb(121,"strong"),r.dc(122,"Example: len(), max(), min() and list()"),r.Ib(),r.Ib(),r.Hb(123,"hr"),r.Jb(124,"pre"),r.Hb(125,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Jb(126,"div",1),r.Jb(127,"div",2),r.Jb(128,"div",3),r.Jb(129,"div",4),r.Jb(130,"h5",5),r.dc(131,"List Class Methods"),r.Ib(),r.Hb(132,"hr"),r.Jb(133,"div",6),r.Jb(134,"p",9),r.dc(135,"index()"),r.Ib(),r.Hb(136,"hr"),r.Jb(137,"p"),r.Jb(138,"code"),r.Jb(139,"strong"),r.dc(140,"Method Signature:"),r.Ib(),r.dc(141," def index(self, obj: _T, start: int, stop: int) -> int"),r.Ib(),r.Ib(),r.Jb(142,"p"),r.dc(143," Return first index of value. "),r.Ib(),r.Jb(144,"div",10),r.Jb(145,"p",6),r.Jb(146,"strong"),r.dc(147,"Note:"),r.Ib(),r.dc(148," Raises ValueError if the value is not present. "),r.Ib(),r.Ib(),r.Jb(149,"p"),r.Jb(150,"strong"),r.dc(151,"Example: List index()"),r.Ib(),r.Ib(),r.Hb(152,"hr"),r.Jb(153,"pre"),r.Hb(154,"code",8),r.Ib(),r.Ib(),r.Jb(155,"div",6),r.Jb(156,"p",9),r.dc(157,"count()"),r.Ib(),r.Hb(158,"hr"),r.Jb(159,"p"),r.Jb(160,"code"),r.Jb(161,"strong"),r.dc(162,"Method Signature:"),r.Ib(),r.dc(163," def count(self, obj: _T) -> int"),r.Ib(),r.Ib(),r.Jb(164,"p"),r.dc(165," Return number of occurrences of value. "),r.Ib(),r.Jb(166,"p"),r.Jb(167,"strong"),r.dc(168,"Example: List count()"),r.Ib(),r.Ib(),r.Hb(169,"hr"),r.Jb(170,"pre"),r.Hb(171,"code",8),r.Ib(),r.Ib(),r.Jb(172,"div",6),r.Jb(173,"p",9),r.dc(174,"remove()"),r.Ib(),r.Hb(175,"hr"),r.Jb(176,"p"),r.Jb(177,"code"),r.Jb(178,"strong"),r.dc(179,"Method Signature:"),r.Ib(),r.dc(180," def remove(self, obj: _T) -> None"),r.Ib(),r.Ib(),r.Jb(181,"p"),r.dc(182," Remove first occurrence of value. "),r.Ib(),r.Jb(183,"div",10),r.Jb(184,"p",6),r.Jb(185,"strong"),r.dc(186,"Note:"),r.Ib(),r.dc(187," Raises ValueError if the value is not present. "),r.Ib(),r.Ib(),r.Jb(188,"p"),r.Jb(189,"strong"),r.dc(190,"Example: List remove()"),r.Ib(),r.Ib(),r.Hb(191,"hr"),r.Jb(192,"pre"),r.Hb(193,"code",8),r.Ib(),r.Ib(),r.Jb(194,"div",6),r.Jb(195,"p",9),r.dc(196,"pop()"),r.Ib(),r.Hb(197,"hr"),r.Jb(198,"p"),r.Jb(199,"code"),r.Jb(200,"strong"),r.dc(201,"Method Signature:"),r.Ib(),r.dc(202," def pop(self, index: int) -> _T"),r.Ib(),r.Ib(),r.Jb(203,"p"),r.dc(204," Remove and return item at index (default last). "),r.Ib(),r.Jb(205,"div",10),r.Jb(206,"p",6),r.Jb(207,"strong"),r.dc(208,"Note:"),r.Ib(),r.dc(209," Raises IndexError if list is empty or index is out of range. "),r.Ib(),r.Ib(),r.Jb(210,"p"),r.Jb(211,"strong"),r.dc(212,"Example: List pop()"),r.Ib(),r.Ib(),r.Hb(213,"hr"),r.Jb(214,"pre"),r.Hb(215,"code",8),r.Ib(),r.Ib(),r.Jb(216,"div",6),r.Jb(217,"p",9),r.dc(218,"copy()"),r.Ib(),r.Hb(219,"hr"),r.Jb(220,"p"),r.Jb(221,"code"),r.Jb(222,"strong"),r.dc(223,"Method Signature:"),r.Ib(),r.dc(224," def copy(self) -> List[_T]"),r.Ib(),r.Ib(),r.Jb(225,"p"),r.dc(226," Return a shallow copy of the list. "),r.Ib(),r.Jb(227,"p"),r.Jb(228,"strong"),r.dc(229,"Example: List copy()"),r.Ib(),r.Ib(),r.Hb(230,"hr"),r.Jb(231,"pre"),r.Hb(232,"code",8),r.Ib(),r.Ib(),r.Jb(233,"div",6),r.Jb(234,"p",9),r.dc(235,"clear()"),r.Ib(),r.Hb(236,"hr"),r.Jb(237,"p"),r.Jb(238,"code"),r.Jb(239,"strong"),r.dc(240,"Method Signature:"),r.Ib(),r.dc(241," def clear(self) -> None"),r.Ib(),r.Ib(),r.Jb(242,"p"),r.dc(243," Remove all items from list. "),r.Ib(),r.Jb(244,"p"),r.Jb(245,"strong"),r.dc(246,"Example: List clear()"),r.Ib(),r.Ib(),r.Hb(247,"hr"),r.Jb(248,"pre"),r.Hb(249,"code",8),r.Ib(),r.Ib(),r.Jb(250,"div",6),r.Jb(251,"p",9),r.dc(252,"extend()"),r.Ib(),r.Hb(253,"hr"),r.Jb(254,"p"),r.Jb(255,"code"),r.Jb(256,"strong"),r.dc(257,"Method Signature:"),r.Ib(),r.dc(258," def extend(self, iterable: Iterable[_T]) -> None"),r.Ib(),r.Ib(),r.Jb(259,"p"),r.dc(260," Extend list by appending elements from the iterable. "),r.Ib(),r.Jb(261,"p"),r.Jb(262,"strong"),r.dc(263,"Example: List extend()"),r.Ib(),r.Ib(),r.Hb(264,"hr"),r.Jb(265,"pre"),r.Hb(266,"code",8),r.Ib(),r.Ib(),r.Jb(267,"div",6),r.Jb(268,"p",9),r.dc(269,"append()"),r.Ib(),r.Hb(270,"hr"),r.Jb(271,"p"),r.Jb(272,"code"),r.Jb(273,"strong"),r.dc(274,"Method Signature:"),r.Ib(),r.dc(275," def append(self, obj: _T) -> None"),r.Ib(),r.Ib(),r.Jb(276,"p"),r.dc(277," Append object to the end of the list. "),r.Ib(),r.Jb(278,"p"),r.Jb(279,"strong"),r.dc(280,"Example: List append()"),r.Ib(),r.Ib(),r.Hb(281,"hr"),r.Jb(282,"pre"),r.Hb(283,"code",8),r.Ib(),r.Ib(),r.Jb(284,"div",10),r.Jb(285,"p",6),r.Jb(286,"strong"),r.dc(287,"Note:"),r.Ib(),r.Ib(),r.Jb(288,"p",6),r.Jb(289,"strong"),r.dc(290,"extend():"),r.Ib(),r.dc(291," Iterates over its argument adding each element to the list, extending the list. The length of the list will increase by however many elements were in the iterable argument. "),r.Ib(),r.Jb(292,"p",6),r.Jb(293,"strong"),r.dc(294,"append():"),r.Ib(),r.dc(295," Adds its argument as a single element to the end of a list. The length of the list itself will increase by one. "),r.Ib(),r.Ib(),r.Jb(296,"div",6),r.Jb(297,"p",9),r.dc(298,"insert()"),r.Ib(),r.Hb(299,"hr"),r.Jb(300,"p"),r.Jb(301,"code"),r.Jb(302,"strong"),r.dc(303,"Method Signature:"),r.Ib(),r.dc(304," def insert(self, index: int, object: _T) -> None"),r.Ib(),r.Ib(),r.Jb(305,"p"),r.dc(306," Insert object before index. "),r.Ib(),r.Jb(307,"p"),r.Jb(308,"strong"),r.dc(309,"Example: List insert()"),r.Ib(),r.Ib(),r.Hb(310,"hr"),r.Jb(311,"pre"),r.Hb(312,"code",8),r.Ib(),r.Ib(),r.Jb(313,"div",6),r.Jb(314,"p",9),r.dc(315,"reverse()"),r.Ib(),r.Hb(316,"hr"),r.Jb(317,"p"),r.Jb(318,"code"),r.Jb(319,"strong"),r.dc(320,"Method Signature:"),r.Ib(),r.dc(321," def reverse(self) -> None"),r.Ib(),r.Ib(),r.Jb(322,"p"),r.dc(323," Reverses the order of the list. "),r.Ib(),r.Jb(324,"p"),r.Jb(325,"strong"),r.dc(326,"Example: List reverse()"),r.Ib(),r.Ib(),r.Hb(327,"hr"),r.Jb(328,"pre"),r.Hb(329,"code",8),r.Ib(),r.Ib(),r.Jb(330,"div",6),r.Jb(331,"p",9),r.dc(332,"sort()"),r.Ib(),r.Hb(333,"hr"),r.Jb(334,"p"),r.Jb(335,"code"),r.Jb(336,"strong"),r.dc(337,"Method Signature:"),r.Ib(),r.dc(338," def sort(self, *, key: Optional[(_T) -> Any], reverse: bool) -> None"),r.Ib(),r.Ib(),r.Jb(339,"p"),r.dc(340," Sorts the list. "),r.Ib(),r.Jb(341,"p"),r.Jb(342,"strong"),r.dc(343,"reverse:"),r.Ib(),r.dc(344," reverse=True will sort the list descending. Default is reverse=False. It is optional argument. "),r.Ib(),r.Jb(345,"p"),r.Jb(346,"strong"),r.dc(347,"key:"),r.Ib(),r.dc(348," A function to specify the sorting criteria(s). It is optional argument. "),r.Ib(),r.Jb(349,"p"),r.Jb(350,"strong"),r.dc(351,"Example - 1: List sort()"),r.Ib(),r.Ib(),r.Hb(352,"hr"),r.Jb(353,"pre"),r.Hb(354,"code",8),r.Ib(),r.Jb(355,"p"),r.Jb(356,"strong"),r.dc(357,"Example - 2: List sort()"),r.Ib(),r.Ib(),r.Hb(358,"hr"),r.Jb(359,"pre"),r.Hb(360,"code",8),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib(),r.Ib()),2&e&&(r.wb(20),r.Ub("languages",t.languages)("highlight",t.listStatementSyntax),r.wb(11),r.Ub("languages",t.languages)("highlight",t.listAccessExampleCode),r.wb(31),r.Ub("languages",t.languages)("highlight",t.listSlicingAndNegativeIndexExampleCode),r.wb(63),r.Ub("languages",t.languages)("highlight",t.listBuiltInExampleCode),r.wb(29),r.Ub("languages",t.languages)("highlight",t.listIndexMethodExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.listCountMethodExampleCode),r.wb(22),r.Ub("languages",t.languages)("highlight",t.listRemoveMethodExampleCode),r.wb(22),r.Ub("languages",t.languages)("highlight",t.listPopMethodExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.listCopyMethodExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.listClearMethodExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.listExtendMethodExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.listAppendMethodExampleCode),r.wb(29),r.Ub("languages",t.languages)("highlight",t.listInsertMethodExampleCode),r.wb(17),r.Ub("languages",t.languages)("highlight",t.listReverseMethodExampleCode),r.wb(25),r.Ub("languages",t.languages)("highlight",t.listSortMethodExampleCode),r.wb(6),r.Ub("languages",t.languages)("highlight",t.listSortMethodExample2Code))},directives:[i.b],styles:[""]}),e})()}];let d=(()=>{class e{}return e.\u0275mod=r.Eb({type:e}),e.\u0275inj=r.Db({factory:function(t){return new(t||e)},imports:[[a.e.forChild(s)],a.e]}),e})(),l=(()=>{class e{}return e.\u0275mod=r.Eb({type:e}),e.\u0275inj=r.Db({factory:function(t){return new(t||e)},providers:[{provide:i.a,useValue:{lineNumbers:!0}}],imports:[[b.b,i.c,d]]}),e})()}}]);